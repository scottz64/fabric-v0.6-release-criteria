
=========== GROUP START TIME Wed Sep 28 23:23:20 UTC 2016, using GERRIT COMMIT IMAGE gerritv0.6
===========

Note: Output is recorded to file GO_TEST__MULTI__Sep2823:23:20UTC2016
Note: Brief test summaries are also written by tests themselves to file GO_TESTS_SUMMARY.log

Preparing to run 46 testcases:
CAT_100_Startup_IQ.go CAT_101_BasicConsensus_S1_R1_S2_S1_R1_R2.go CAT_102_S1_IQDQIQ.go CAT_103_S0_IQDQIQ.go CAT_104_SnIQRnIQDQIQ_CycleAndRepeat.go CAT_105_S1_IQDQIQ_R1_IQIQ_repeats.go CAT_106_S1_IQDQIQ_R1_IQ_S2_IQ.go CAT_107_S1_IQDQIQ_R1_IQ_S0_IQ.go CAT_108_S0_IQDQIQ_R0_IQIQ_repeats.go CAT_109_S0_IQDQIQ_R0_IQ_S2_IQ.go CAT_110_S0_IQDQIQ_R0_IQ_S1_IQ.go CAT_111_SnIQRnIQ_cycleDownLoop.go CAT_112_SnIQRnIQ_cycleUpLoop.go CAT_113_StopAndStartMemberServices.go CAT_114_S1_IQ_R1_IQcatchup.go CAT_201_S2S1_IQDIQ.go CAT_202_S2S1_IQredeployIQ.go CAT_203_S0S1_IQDI.go CAT_204_S2_IQDQIQ_S1_IQDD.go CAT_205_S0_IQDQIQ_S1_IQDD.go CAT_206_S1_IQ_S2_R1_IQ.go CAT_207_S2_IQ_S1_IQ_R1_IQ.go CAT_208_S1_IQ_S0_R0_IQ.go CAT_209_S0_IQ_S1_IQ_R0_IQ.go CAT_210_S2S1_IQ_R1_IQ.go CAT_211_S2S1_IQ_R1R2_IQ.go CAT_212_S0S1_IQ_R0_IQ.go CAT_213_S0S1_IQ_R0R1_IQ.go CAT_301_S0S1S2_IQ_R0_IQ_R1_IQ.go CAT_302_S0S1S2_IQ_R0R1_IQIQ.go CAT_303_S0S1S2_IQ_R0R1R2_IQ.go CAT_304_S1S2S3_IQ_R1R2_IQ.go CAT_305_S1S2S3_IQ_R1R2R3_IQ.go CAT_306_S0S1S2S3_R0R1R2_IQ_R3_IQ.go CAT_307_S0S1S2S3_R0R1R2R3_IQ.go CAT_401_DQIQDQIQ.go CAT_402_S1_DQIQDQIQ.go CAT_403_S0_IQ_DQIQDQIQ.go CAT_404_S1S2_D_I_R1_IQ.go CAT_405_S0S1_D_I_R0_IQ.go CAT_406_S0S1_D_I_R0R1_IQ.go CAT_407_S0S1S2_D_I_R0R1_IQ.go CAT_408_S0S1S2_D_I_R0R1R2_IQ.go CAT_409_S1S2S3_D_I_R1R2_IQ.go CAT_410_S1S2S3_D_I_R1R2R3_IQ.go CAT_ip_debug.go

Using test environment variables:

COMMIT LEVEL IMAGE: gerritv0.6
PEER_IMAGE=hyperledger/fabric-peer
PEER_IMAGE=rameshthoomu/peer
MEMBERSRVC_IMAGE=hyperledger/fabric-membersrvc
MEMBERSRVC_IMAGE=rameshthoomu/membersrvc
CORE_PBFT_GENERAL_N, number of peer nodes in network: 4
CORE_LOGGING_LEVEL: error
CORE_SECURITY_ENABLED: Y
CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN:   pbft 
CORE_PBFT_GENERAL_MODE: batch 
CORE_PBFT_GENERAL_BATCHSIZE, max number of transactions sent in each batch for ordering: 2
CORE_PBFT_GENERAL_F, max number of nodes that can fail while still have consensus: 1
TEST_STOP_OR_PAUSE used by GO tests with docker networks when disrupting network CA and PEER nodes: STOP
REPOSITORY_SOURCE used by GO SDK to retrieve the fabric COMMIT image: GERRIT
TEST_VERBOSE: 
TEST_FULL_CATCHUP: 
TEST_EXISTING_NETWORK: 
 
docker run -d --name=PEER0 -it \
                -e CORE_VM_ENDPOINT="http://$IP:$PORT" \
                -e CORE_PEER_ID="vp0" \
                -e CORE_SECURITY_ENABLED=true \
                -e CORE_SECURITY_PRIVACY=true \
                -e CORE_PEER_ADDRESSAUTODETECT=false -p $REST_PORT:7050 -p `expr $USE_PORT + 1`:$PEER_gRPC \
                -e CORE_PEER_ADDRESS=$IP:`expr $USE_PORT + 1` \
                -e CORE_PEER_PKI_ECA_PADDR=$IP:$CA_PORT \
                -e CORE_PEER_PKI_TCA_PADDR=$IP:$CA_PORT \
                -e CORE_PEER_PKI_TLSCA_PADDR=$IP:$CA_PORT \
                -e CORE_PEER_LISTENADDRESS=0.0.0.0:$PEER_gRPC \
                -e CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=$CONSENSUS_MODE \
                -e CORE_PBFT_GENERAL_MODE=$PBFT_MODE \
                -e CORE_PBFT_GENERAL_N=$NUM_PEERS \
                -e CORE_PBFT_GENERAL_F=$F \
                -e CORE_PBFT_GENERAL_BATCHSIZE=$PBFT_BATCHSIZE \
                -e CORE_PBFT_GENERAL_TIMEOUT_REQUEST=10s \
                -e CORE_LOGGING_LEVEL=$PEER_LOG \
                -e CORE_VM_DOCKER_TLS_ENABLED=false \
                -e CORE_SECURITY_ENROLLID=test_vp0 \
                -e CORE_SECURITY_ENROLLSECRET=MwYpmSRjupbT $PEER_IMAGE:$COMMIT peer node start
docker run  -d --name=PEER$peer_id -it \
                -e CORE_VM_ENDPOINT="http://$IP:$PORT" \
                -e CORE_PEER_ID="vp"$peer_id \
                -e CORE_SECURITY_ENABLED=true \
                -e CORE_SECURITY_PRIVACY=true \
                -e CORE_PEER_ADDRESSAUTODETECT=true -p $REST_PORT:7050 -p `expr $USE_PORT + 1`:$PEER_gRPC \
                -e CORE_PEER_DISCOVERY_ROOTNODE=$IP:30001 \
                -e CORE_PEER_PKI_ECA_PADDR=$IP:$CA_PORT \
                -e CORE_PEER_PKI_TCA_PADDR=$IP:$CA_PORT \
                -e CORE_PEER_PKI_TLSCA_PADDR=$IP:$CA_PORT \
                -e CORE_PEER_LISTENADDRESS=0.0.0.0:$PEER_gRPC \
                -e CORE_PEER_VALIDATOR_CONSENSUS_PLUGIN=$CONSENSUS_MODE \
                -e CORE_PBFT_GENERAL_MODE=$PBFT_MODE \
                -e CORE_PBFT_GENERAL_N=$NUM_PEERS \
                -e CORE_PBFT_GENERAL_F=$F \
                -e CORE_PBFT_GENERAL_BATCHSIZE=$PBFT_BATCHSIZE \
                -e CORE_PBFT_GENERAL_TIMEOUT_REQUEST=10s \
                -e CORE_LOGGING_LEVEL=$PEER_LOG \
                -e CORE_VM_DOCKER_TLS_ENABLED=false \
                -e CORE_SECURITY_ENROLLID=$USER_NAME \
                -e CORE_SECURITY_ENROLLSECRET=$SECRET_KEY $PEER_IMAGE:$COMMIT peer node start
 


----------- go run CAT_100_Startup_IQ.go STARTSTARTSTARTSTARTSTARTSTART Wed Sep 28 23:23:20 UTC 2016 -----------
-----------

BEGIN  CAT_100_Startup_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-28 23:23:21.643234778 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
bfe28a79a9e2c831a7600ebc2cecb368225db72109eaca7f6972b4ca1501a244
--------> Starting hyperledger PEER0
4ff89730b01fac533b0940aae6da515a1f5ec3234ff4b13f7f7c2923a14dc85b
--------> Starting hyperledger PEER1 <-----------
e824ab91fc31bf47e5cf12ad441fac3340bf37f2f91a39646a76a5f6c67f1a78
--------> Starting hyperledger PEER2 <-----------
18b6dc63a93ec650da48898fd80ef45894238b2ba3fb0b3d149c275facebab61
--------> Starting hyperledger PEER3 <-----------
4ac3fa55d8afe05a744461390c58531bc05f429ab9482c394784806c7bcacc56
--------> Printing list of Docker Containers
CONTAINERS: 4ac3fa55d8af 18b6dc63a93e e824ab91fc31 4ff89730b01f
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 4ff89730b01f   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID e824ab91fc31   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 18b6dc63a93e   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 4ac3fa55d8af   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 2, Query all peers after Startup Network and 1 Invokes on each peer
PASSED QUERY TEST: Expected A/B (999992/1000008) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999992/1000008 1:999992/1000008 2:999992/1000008 3:999992/1000008 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (10). Actual CHs: PEER0(10) PEER1(10) PEER2(10) PEER3(10) 

POST/Chaincode: INVOKEs total (40) divided among all 4 running peers
....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after 10 invokes on each peer, submitted sequentially
PASSED QUERY TEST: Expected A/B (999952/1000048) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999952/1000048 1:999952/1000048 2:999952/1000048 3:999952/1000048 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (30). Actual CHs: PEER0(30) PEER1(30) PEER2(30) PEER3(30) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_100_Startup_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [2m18.272583511s]  

-----------
----------- go run CAT_100_Startup_IQ.go FINISHFINISHFINISHFINISHFINISH Wed Sep 28 23:25:39 UTC 2016 -----------


----------- go run CAT_101_BasicConsensus_S1_R1_S2_S1_R1_R2.go STARTSTARTSTARTSTARTSTARTSTART Wed Sep 28 23:25:39 UTC 2016 -----------
-----------

BEGIN  CAT_101_BasicConsensus_S1_R1_S2_S1_R1_R2.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-28 23:25:41.490205815 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
d41da9b5ae596e34a48f08423b099539a766042d9b69840f38524462d5ac3805
--------> Starting hyperledger PEER0
1a394469e4e32d31425d17c90ebec301c3cb9264debd574d436dddc8caaf2aa1
--------> Starting hyperledger PEER1 <-----------
9afd3d14e36b3d016a4eab41fa07151f374d57f39959da48c85d549e46e70926
--------> Starting hyperledger PEER2 <-----------
d347563639921f0db7a25dac3188c957be9f258ba68319766b197b9f2a291c0b
--------> Starting hyperledger PEER3 <-----------
e077c548361349302d662a2392f8fb7931b31d959ca08f05cf70c77315e6f939
--------> Printing list of Docker Containers
CONTAINERS: e077c5483613 d34756363992 9afd3d14e36b 1a394469e4e3
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 1a394469e4e3   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 9afd3d14e36b   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID d34756363992   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID e077c5483613   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 
This testcase is executing STOP/RESTART, not PAUSE/UNPAUSE

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3
PASSED QUERY TEST: Expected A/B (999986/1000014) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999986/1000014 2:999986/1000014 3:999986/1000014 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (12). Actual CHs: PEER0(12) PEER2(12) PEER3(12) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6
PASSED QUERY TEST: Expected A/B (999976/1000024) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999976/1000024 1:999996/1000004 2:999976/1000024 3:999976/1000024 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (17). Actual CHs: PEER0(17) PEER1(6) PEER2(17) PEER3(17) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8
PASSED QUERY TEST: Expected A/B (999876/1000124) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999876/1000124 1:999876/1000124 2:999876/1000124 3:999876/1000124 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (69). Actual CHs: PEER0(69) PEER1(69) PEER2(69) PEER3(69) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 11
PASSED QUERY TEST: Expected A/B (999866/1000134) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999866/1000134 1:999866/1000134 3:999866/1000134 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (75). Actual CHs: PEER0(75) PEER1(75) PEER3(75) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 2 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 14
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999856/1000144). ACTUALs (node:A/B): 0:999866/1000134 3:999866/1000134 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (75). Actual CHs: PEER0(75) PEER3(75) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 17
PASSED QUERY TEST: Expected A/B (999845/1000155) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999845/1000155 1:999845/1000155 3:999845/1000155 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (87). Actual CHs: PEER0(86) PEER1(86) PEER3(86) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 19
PASSED QUERY TEST: Expected A/B (999745/1000255) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999745/1000255 1:999745/1000255 3:999745/1000255 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (138). Actual CHs: PEER0(136) PEER1(136) PEER3(136) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 22
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (999735/1000265) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999735/1000265 1:999735/1000265 2:0/0 3:999735/1000265 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (143). Actual CHs: PEER0(141) PEER1(141) PEER2(69) PEER3(141) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_101_BasicConsensus_S1_R1_S2_S1_R1_R2.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [5m41.145255015s]  

-----------
----------- go run CAT_101_BasicConsensus_S1_R1_S2_S1_R1_R2.go FINISHFINISHFINISHFINISHFINISH Wed Sep 28 23:31:22 UTC 2016 -----------


----------- go run CAT_102_S1_IQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Wed Sep 28 23:31:22 UTC 2016 -----------
-----------

BEGIN  CAT_102_S1_IQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-28 23:31:24.061428376 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
1fd28b88d1e566184146f56fb961ca3f07eef57cb57d5e445120bf72a068355e
--------> Starting hyperledger PEER0
a7491d0cd9bc0b659d5cc6841d46252aa4a0bb522d978c5eb347d4056ecb9201
--------> Starting hyperledger PEER1 <-----------
90edc5fccb8a0247b3a65ec3596912438ba99d5f3f934128c21f4a97147e7445
--------> Starting hyperledger PEER2 <-----------
02f593ffc284d768e2028f7de0981a65cc2e308bc1198e0d0793fa633ec67c2c
--------> Starting hyperledger PEER3 <-----------
5cb84a92294d773a4744287be96465068e272b8f1f579c30a46abf0baf2d483f
--------> Printing list of Docker Containers
CONTAINERS: 5cb84a92294d 02f593ffc284 90edc5fccb8a a7491d0cd9bc
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID a7491d0cd9bc   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 90edc5fccb8a   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 02f593ffc284   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 5cb84a92294d   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999993/1000007) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999993/1000007 2:999993/1000007 3:999993/1000007 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (9). Actual CHs: PEER0(9) PEER2(9) PEER3(9) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=500 B=500
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","500","b","500"]},"secureContext":"test_user3"},"id":24}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (500/500) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:500/500 2:500/500 3:500/500 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (10). Actual CHs: PEER0(10) PEER2(10) PEER3(10) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after more Invokes 
PASSED QUERY TEST: Expected A/B (497/503) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:497/503 2:497/503 3:497/503 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_102_S1_IQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [3m24.580160583s]  

After start peer, sleep 5 secs
-----------
----------- go run CAT_102_S1_IQDQIQ.go FINISHFINISHFINISHFINISHFINISH Wed Sep 28 23:34:53 UTC 2016 -----------


----------- go run CAT_103_S0_IQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Wed Sep 28 23:34:53 UTC 2016 -----------
-----------

BEGIN  CAT_103_S0_IQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-28 23:34:55.082642221 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
9ee57cb82f10fa759ce1b85283c3920eafd13bc8a656b062f127979afb943802
--------> Starting hyperledger PEER0
26e032fa7974d047db9e3be2ef422a7fec59724c57a7d070c654837ab905a149
--------> Starting hyperledger PEER1 <-----------
7758afa68d85f4482e21b34945cacd6a1fd97e7cc433c5765ebff8ade97cab7c
--------> Starting hyperledger PEER2 <-----------
89b03ca935ad404abf149e4fb09b4e9f559f74ee61051ab34a719f41187f3bc2
--------> Starting hyperledger PEER3 <-----------
e9f5ba67199beb693a43e069628d7c5d50c78b8ef25b27262f598ee204556c69
--------> Printing list of Docker Containers
CONTAINERS: e9f5ba67199b 89b03ca935ad 7758afa68d85 26e032fa7974
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 26e032fa7974   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 7758afa68d85   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 89b03ca935ad   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID e9f5ba67199b   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
  type  GOLANG
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (200) divided among all 3 running peers
..................
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999796/1000204 2:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (106). Actual CHs: PEER1(106) PEER2(106) PEER3(106) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=500 B=500
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","500","b","500"]},"secureContext":"test_user3"},"id":221}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (500/500) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:500/500 2:500/500 3:500/500 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (107). Actual CHs: PEER1(107) PEER2(107) PEER3(107) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after more Invokes 
PASSED QUERY TEST: Expected A/B (497/503) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:497/503 2:497/503 3:497/503 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (110). Actual CHs: PEER1(110) PEER2(110) PEER3(110) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_103_S0_IQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [3m58.345013375s]  

ERROR: Could not exec docker start 0
[]
-----------
----------- go run CAT_103_S0_IQDQIQ.go FINISHFINISHFINISHFINISHFINISH Wed Sep 28 23:38:53 UTC 2016 -----------


----------- go run CAT_104_SnIQRnIQDQIQ_CycleAndRepeat.go STARTSTARTSTARTSTARTSTARTSTART Wed Sep 28 23:38:53 UTC 2016 -----------
-----------

BEGIN  CAT_104_SnIQRnIQDQIQ_CycleAndRepeat.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-28 23:38:54.863552616 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
9d418ed8232fae3ac951894ee9a2581561f438905d1d8e5506f83368d798ee27
--------> Starting hyperledger PEER0
baae1e508633da329e47d28e47f6222d956abf2a1bf350378c64b25c3762a532
--------> Starting hyperledger PEER1 <-----------
015c0dc67abade0bf0c79824e5dc74730a335705b5e24c39ea0e062b16953773
--------> Starting hyperledger PEER2 <-----------
7d960f9b97d3fc27d602d8c47f11f2741a5ebc34a60451230293e1e6d4431434
--------> Starting hyperledger PEER3 <-----------
6906abf37e516e1cac2fbf67c7abee29241498d0b0de5239daa0a612017dd839
--------> Printing list of Docker Containers
CONTAINERS: 6906abf37e51 7d960f9b97d3 015c0dc67aba baae1e508633
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID baae1e508633   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 015c0dc67aba   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 7d960f9b97d3   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 6906abf37e51   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999986/1000014) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999986/1000014 2:999986/1000014 3:999986/1000014 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (12). Actual CHs: PEER1(11) PEER2(11) PEER3(11) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999976/1000024) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999976/1000024 2:999976/1000024 3:999976/1000024 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (17). Actual CHs: PEER0(6) PEER1(16) PEER2(16) PEER3(16) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=10000 B=10000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","10000","b","10000"]},"secureContext":"test_user3"},"id":49}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/3 after REDEPLOY new values
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (10000/10000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:10000/10000 2:10000/10000 3:10000/10000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (18). Actual CHs: PEER0(6) PEER1(17) PEER2(17) PEER3(17) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after Invoke on each peer
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (9990/10010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:9990/10010 2:9990/10010 3:9990/10010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (23). Actual CHs: PEER0(6) PEER1(22) PEER2(22) PEER3(22) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (9980/10020) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9980/10020 2:9980/10020 3:9980/10020 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (29). Actual CHs: PEER0(27) PEER2(27) PEER3(27) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (9970/10030) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9970/10030 1:9990/10010 2:9970/10030 3:9970/10030 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (34). Actual CHs: PEER0(32) PEER1(22) PEER2(32) PEER3(32) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=11000 B=11000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","11000","b","11000"]},"secureContext":"test_user3"},"id":110}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/3 after REDEPLOY new values
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 944ccb73a4fab33abaea9ea47fa4ea0b71a61899a46ea9fa6574561e46fc4449cf0d091038a7fa204bfa81f8401a847aec0b4b4dcea0cfdbfea2b4fe52252805 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 944ccb73a4fab33abaea9ea47fa4ea0b71a61899a46ea9fa6574561e46fc4449cf0d091038a7fa204bfa81f8401a847aec0b4b4dcea0cfdbfea2b4fe52252805 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (11000/11000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:11000/11000 1:0/0 2:11000/11000 3:11000/11000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (35). Actual CHs: PEER0(33) PEER1(22) PEER2(33) PEER3(33) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after Invoke on each peer
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 944ccb73a4fab33abaea9ea47fa4ea0b71a61899a46ea9fa6574561e46fc4449cf0d091038a7fa204bfa81f8401a847aec0b4b4dcea0cfdbfea2b4fe52252805 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 944ccb73a4fab33abaea9ea47fa4ea0b71a61899a46ea9fa6574561e46fc4449cf0d091038a7fa204bfa81f8401a847aec0b4b4dcea0cfdbfea2b4fe52252805 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (10990/11010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:10990/11010 1:0/0 2:10990/11010 3:10990/11010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (40). Actual CHs: PEER0(38) PEER1(22) PEER2(38) PEER3(38) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (10980/11020) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:10980/11020 1:10980/11020 3:10980/11020 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (46). Actual CHs: PEER0(44) PEER1(44) PEER3(44) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (10970/11030) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:10970/11030 1:10970/11030 2:10990/11010 3:10970/11030 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (51). Actual CHs: PEER0(49) PEER1(49) PEER2(38) PEER3(49) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=12000 B=12000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","12000","b","12000"]},"secureContext":"test_user3"},"id":171}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/3 after REDEPLOY new values
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 94afa19b697c96dd53f77c7f8cd5acc193665524e09b3783fa591833cb47cca4d94988d8029c4ad833cea79965d00f44076b27ab69d01ffe19a40fb8de4cac18 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 94afa19b697c96dd53f77c7f8cd5acc193665524e09b3783fa591833cb47cca4d94988d8029c4ad833cea79965d00f44076b27ab69d01ffe19a40fb8de4cac18 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (12000/12000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:12000/12000 1:12000/12000 2:0/0 3:12000/12000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (52). Actual CHs: PEER0(50) PEER1(50) PEER2(38) PEER3(50) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after Invoke on each peer
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 94afa19b697c96dd53f77c7f8cd5acc193665524e09b3783fa591833cb47cca4d94988d8029c4ad833cea79965d00f44076b27ab69d01ffe19a40fb8de4cac18 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 94afa19b697c96dd53f77c7f8cd5acc193665524e09b3783fa591833cb47cca4d94988d8029c4ad833cea79965d00f44076b27ab69d01ffe19a40fb8de4cac18 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (11990/12010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:11990/12010 1:11990/12010 2:0/0 3:11990/12010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER0(55) PEER1(55) PEER2(38) PEER3(55) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 3 and Invokes
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:     11980     12020.
ACTUALs:
Peer 0            11990     12010
Peer 1            11990     12010
Peer 2            11990     12010
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (63). Actual CHs: PEER0(55) PEER1(55) PEER2(55) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:     11970     12030.
ACTUALs:
Peer 0            11990     12010
Peer 1            11990     12010
Peer 2            11990     12010
Peer 3            11990     12010
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (68). Actual CHs: PEER0(55) PEER1(55) PEER2(55) PEER3(55) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=13000 B=13000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","13000","b","13000"]},"secureContext":"test_user3"},"id":232}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (13000/13000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:13000/13000 1:13000/13000 2:13000/13000 3:13000/13000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (69). Actual CHs: PEER0(66) PEER1(66) PEER2(66) PEER3(66) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (12990/13010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:12990/13010 1:12990/13010 2:12990/13010 3:12990/13010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (74). Actual CHs: PEER0(71) PEER1(71) PEER2(71) PEER3(71) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
PASSED QUERY TEST: Expected A/B (12890/13110) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:12890/13110 1:12890/13110 2:12890/13110 3:12890/13110 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (126). Actual CHs: PEER0(123) PEER1(123) PEER2(123) PEER3(123) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (12880/13120) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:12880/13120 2:12880/13120 3:12880/13120 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (132). Actual CHs: PEER1(128) PEER2(128) PEER3(128) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (12870/13130) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:12890/13110 1:12870/13130 2:12870/13130 3:12870/13130 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (137). Actual CHs: PEER0(123) PEER1(133) PEER2(133) PEER3(133) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=20000 B=20000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","20000","b","20000"]},"secureContext":"test_user3"},"id":401}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 2/3 after REDEPLOY new values
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for efd8d381fcb81d42daff04514eb48255e2dc54cdc93d3b7ecefaa7b513f76e88efadd4956d46a56a82816852241864ef2a3ae398bcf4dcd6876c4dbeec1dafc5 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for efd8d381fcb81d42daff04514eb48255e2dc54cdc93d3b7ecefaa7b513f76e88efadd4956d46a56a82816852241864ef2a3ae398bcf4dcd6876c4dbeec1dafc5 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (20000/20000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:20000/20000 2:20000/20000 3:20000/20000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (138). Actual CHs: PEER0(123) PEER1(134) PEER2(134) PEER3(134) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after Invoke on each peer
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for efd8d381fcb81d42daff04514eb48255e2dc54cdc93d3b7ecefaa7b513f76e88efadd4956d46a56a82816852241864ef2a3ae398bcf4dcd6876c4dbeec1dafc5 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for efd8d381fcb81d42daff04514eb48255e2dc54cdc93d3b7ecefaa7b513f76e88efadd4956d46a56a82816852241864ef2a3ae398bcf4dcd6876c4dbeec1dafc5 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (19990/20010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:19990/20010 2:19990/20010 3:19990/20010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (143). Actual CHs: PEER0(123) PEER1(139) PEER2(139) PEER3(139) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (19980/20020) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19980/20020 2:19980/20020 3:19980/20020 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (149). Actual CHs: PEER0(144) PEER2(144) PEER3(144) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (19970/20030) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19970/20030 1:19990/20010 2:19970/20030 3:19970/20030 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (154). Actual CHs: PEER0(149) PEER1(139) PEER2(149) PEER3(149) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=21000 B=21000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","21000","b","21000"]},"secureContext":"test_user3"},"id":462}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 2/3 after REDEPLOY new values
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 0253040b679f5e021b47761ca2bec1ce65742b1b323bc1beedd9f9c9955fc9b3891a66b2d26ea12b84a2315cb87228ed2c84e43a23e93e20325e65f36ad3fc1b - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 0253040b679f5e021b47761ca2bec1ce65742b1b323bc1beedd9f9c9955fc9b3891a66b2d26ea12b84a2315cb87228ed2c84e43a23e93e20325e65f36ad3fc1b - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (21000/21000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:21000/21000 1:0/0 2:21000/21000 3:21000/21000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (155). Actual CHs: PEER0(150) PEER1(139) PEER2(150) PEER3(150) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after Invoke on each peer
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 0253040b679f5e021b47761ca2bec1ce65742b1b323bc1beedd9f9c9955fc9b3891a66b2d26ea12b84a2315cb87228ed2c84e43a23e93e20325e65f36ad3fc1b - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 0253040b679f5e021b47761ca2bec1ce65742b1b323bc1beedd9f9c9955fc9b3891a66b2d26ea12b84a2315cb87228ed2c84e43a23e93e20325e65f36ad3fc1b - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (20990/21010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:20990/21010 1:0/0 2:20990/21010 3:20990/21010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER0(155) PEER1(139) PEER2(155) PEER3(155) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 2 and Invokes
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:     20980     21020.
ACTUALs:
Peer 0            20990     21010
Peer 1            20990     21010
Peer 3            20990     21010
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (166). Actual CHs: PEER0(155) PEER1(155) PEER3(155) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:     20970     21030.
ACTUALs:
Peer 0            20990     21010
Peer 1            20990     21010
Peer 2            20990     21010
Peer 3            20990     21010
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (171). Actual CHs: PEER0(155) PEER1(155) PEER2(155) PEER3(155) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=22000 B=22000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","22000","b","22000"]},"secureContext":"test_user3"},"id":523}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 2/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (22000/22000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:22000/22000 1:22000/22000 2:22000/22000 3:22000/22000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (172). Actual CHs: PEER0(166) PEER1(166) PEER2(166) PEER3(166) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (21990/22010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:21990/22010 1:21990/22010 2:21990/22010 3:21990/22010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (177). Actual CHs: PEER0(171) PEER1(171) PEER2(171) PEER3(171) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
PASSED QUERY TEST: Expected A/B (21890/22110) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:21890/22110 1:21890/22110 2:21890/22110 3:21890/22110 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (229). Actual CHs: PEER0(223) PEER1(223) PEER2(223) PEER3(223) 

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (21880/22120) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:21880/22120 1:21880/22120 2:21880/22120 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (235). Actual CHs: PEER0(228) PEER1(228) PEER2(228) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (21870/22130) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:21870/22130 1:21870/22130 2:21870/22130 3:21890/22110 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (240). Actual CHs: PEER0(233) PEER1(233) PEER2(233) PEER3(223) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=23000 B=23000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","23000","b","23000"]},"secureContext":"test_user3"},"id":692}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 2/3 after REDEPLOY new values
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e9960fbcd7361550c21938a7f329b01f00effd94fd7cbfa85847006443b4963416bbcb6d5635f296469508763b37d3eba183c24353920771f4936fc96f5b7687 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e9960fbcd7361550c21938a7f329b01f00effd94fd7cbfa85847006443b4963416bbcb6d5635f296469508763b37d3eba183c24353920771f4936fc96f5b7687 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (23000/23000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:23000/23000 1:23000/23000 2:23000/23000 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (241). Actual CHs: PEER0(234) PEER1(234) PEER2(234) PEER3(223) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after Invoke on each peer
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e9960fbcd7361550c21938a7f329b01f00effd94fd7cbfa85847006443b4963416bbcb6d5635f296469508763b37d3eba183c24353920771f4936fc96f5b7687 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e9960fbcd7361550c21938a7f329b01f00effd94fd7cbfa85847006443b4963416bbcb6d5635f296469508763b37d3eba183c24353920771f4936fc96f5b7687 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (22990/23010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:22990/23010 1:22990/23010 2:22990/23010 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (246). Actual CHs: PEER0(239) PEER1(239) PEER2(239) PEER3(223) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (22980/23020) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:22980/23020 2:22980/23020 3:22980/23020 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (252). Actual CHs: PEER1(244) PEER2(244) PEER3(244) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (22970/23030) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:22990/23010 1:22970/23030 2:22970/23030 3:22970/23030 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (257). Actual CHs: PEER0(239) PEER1(249) PEER2(249) PEER3(249) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=30000 B=30000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","30000","b","30000"]},"secureContext":"test_user3"},"id":753}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 3/3 after REDEPLOY new values
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 91c8fb2ab43c951fc1e69ca3d086fc086407a0a31509a173241a0ab96d39c3219cf355f310406cfdcf5cd27c7c22fd77595aff3f12d9d33b427166bc6058aeff - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 91c8fb2ab43c951fc1e69ca3d086fc086407a0a31509a173241a0ab96d39c3219cf355f310406cfdcf5cd27c7c22fd77595aff3f12d9d33b427166bc6058aeff - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (30000/30000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:30000/30000 2:30000/30000 3:30000/30000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (258). Actual CHs: PEER0(239) PEER1(250) PEER2(250) PEER3(250) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after Invoke on each peer
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 91c8fb2ab43c951fc1e69ca3d086fc086407a0a31509a173241a0ab96d39c3219cf355f310406cfdcf5cd27c7c22fd77595aff3f12d9d33b427166bc6058aeff - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 91c8fb2ab43c951fc1e69ca3d086fc086407a0a31509a173241a0ab96d39c3219cf355f310406cfdcf5cd27c7c22fd77595aff3f12d9d33b427166bc6058aeff - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (29990/30010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:29990/30010 2:29990/30010 3:29990/30010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (263). Actual CHs: PEER0(239) PEER1(255) PEER2(255) PEER3(255) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 1 and Invokes
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:     29980     30020.
ACTUALs:
Peer 0            29990     30010
Peer 2            29990     30010
Peer 3            29990     30010
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (269). Actual CHs: PEER0(255) PEER2(255) PEER3(255) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:     29970     30030.
ACTUALs:
Peer 0            29990     30010
Peer 1            29990     30010
Peer 2            29990     30010
Peer 3            29990     30010
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (274). Actual CHs: PEER0(255) PEER1(255) PEER2(255) PEER3(255) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=31000 B=31000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","31000","b","31000"]},"secureContext":"test_user3"},"id":814}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 3/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (31000/31000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:31000/31000 1:31000/31000 2:31000/31000 3:31000/31000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (275). Actual CHs: PEER0(266) PEER1(266) PEER2(266) PEER3(266) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (30990/31010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:30990/31010 1:30990/31010 2:30990/31010 3:30990/31010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (280). Actual CHs: PEER0(271) PEER1(271) PEER2(271) PEER3(271) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
PASSED QUERY TEST: Expected A/B (30890/31110) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:30890/31110 1:30890/31110 2:30890/31110 3:30890/31110 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (332). Actual CHs: PEER0(323) PEER1(323) PEER2(323) PEER3(323) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (30880/31120) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:30880/31120 1:30880/31120 3:30880/31120 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (338). Actual CHs: PEER0(328) PEER1(328) PEER3(328) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (30870/31130) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:30870/31130 1:30870/31130 2:30890/31110 3:30870/31130 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (343). Actual CHs: PEER0(333) PEER1(333) PEER2(323) PEER3(333) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=32000 B=32000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","32000","b","32000"]},"secureContext":"test_user3"},"id":983}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 3/3 after REDEPLOY new values
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 9fa7d36108966385f4ac8e34ddecdf40de62a44a7ff68a6987f88227cb065437dd647898666fca6326d2a68d8173ba0e1572fbba3c692586c203740fd92bf3db - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 9fa7d36108966385f4ac8e34ddecdf40de62a44a7ff68a6987f88227cb065437dd647898666fca6326d2a68d8173ba0e1572fbba3c692586c203740fd92bf3db - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (32000/32000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:32000/32000 1:32000/32000 2:0/0 3:32000/32000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (344). Actual CHs: PEER0(334) PEER1(334) PEER2(323) PEER3(334) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after Invoke on each peer
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 9fa7d36108966385f4ac8e34ddecdf40de62a44a7ff68a6987f88227cb065437dd647898666fca6326d2a68d8173ba0e1572fbba3c692586c203740fd92bf3db - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 9fa7d36108966385f4ac8e34ddecdf40de62a44a7ff68a6987f88227cb065437dd647898666fca6326d2a68d8173ba0e1572fbba3c692586c203740fd92bf3db - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (31990/32010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:31990/32010 1:31990/32010 2:0/0 3:31990/32010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (349). Actual CHs: PEER0(339) PEER1(339) PEER2(323) PEER3(339) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (31980/32020) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:31980/32020 1:31980/32020 2:31980/32020 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (355). Actual CHs: PEER0(344) PEER1(344) PEER2(344) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (31970/32030) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:31970/32030 1:31970/32030 2:31970/32030 3:31990/32010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (360). Actual CHs: PEER0(349) PEER1(349) PEER2(349) PEER3(339) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=33000 B=33000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","33000","b","33000"]},"secureContext":"test_user3"},"id":1044}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 3/3 after REDEPLOY new values
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for ac7fd966ea9052eb8cf5b9132b047c3ea39e20bfaf6b2aff5c818db86dceca34e77e43d57d59ae8fcfec8124b06574edeaf032a226c1771160335e8794e81441 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for ac7fd966ea9052eb8cf5b9132b047c3ea39e20bfaf6b2aff5c818db86dceca34e77e43d57d59ae8fcfec8124b06574edeaf032a226c1771160335e8794e81441 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (33000/33000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:33000/33000 1:33000/33000 2:33000/33000 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (361). Actual CHs: PEER0(350) PEER1(350) PEER2(350) PEER3(339) 

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after Invoke on each peer
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for ac7fd966ea9052eb8cf5b9132b047c3ea39e20bfaf6b2aff5c818db86dceca34e77e43d57d59ae8fcfec8124b06574edeaf032a226c1771160335e8794e81441 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for ac7fd966ea9052eb8cf5b9132b047c3ea39e20bfaf6b2aff5c818db86dceca34e77e43d57d59ae8fcfec8124b06574edeaf032a226c1771160335e8794e81441 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (32990/33010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:32990/33010 1:32990/33010 2:32990/33010 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (366). Actual CHs: PEER0(355) PEER1(355) PEER2(355) PEER3(339) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_104_SnIQRnIQDQIQ_CycleAndRepeat.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [39m45.735404367s]  

-----------
----------- go run CAT_104_SnIQRnIQDQIQ_CycleAndRepeat.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 00:18:40 UTC 2016 -----------


----------- go run CAT_105_S1_IQDQIQ_R1_IQIQ_repeats.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 00:18:40 UTC 2016 -----------
-----------

BEGIN  CAT_105_S1_IQDQIQ_R1_IQIQ_repeats.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 00:18:42.547169116 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
87ce552a7dc8943c40651183024ea910d0814526c7dc3524787bc48fd010b023
--------> Starting hyperledger PEER0
4e57b991f1ab533b1ad02e536ab69e156096913c46c07121c8d4b75fa2b93830
--------> Starting hyperledger PEER1 <-----------
a8ed9b73c7c49518e6696942fe01530c32205ddf6b7c6e2eebe570270cf3e77c
--------> Starting hyperledger PEER2 <-----------
996a2f8988ed9525bced2fbd9bbf2911f18aa2d1d168755531e06f529bdfad7d
--------> Starting hyperledger PEER3 <-----------
fa5a2ce31a742d6745619a927d1b870809f56bdfaec4742e09a49bd65b6faa49
--------> Printing list of Docker Containers
CONTAINERS: fa5a2ce31a74 996a2f8988ed a8ed9b73c7c4 4e57b991f1ab
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 4e57b991f1ab   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID a8ed9b73c7c4   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 996a2f8988ed   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID fa5a2ce31a74   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
  type  GOLANG
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999986/1000014) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999986/1000014 2:999986/1000014 3:999986/1000014 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (12). Actual CHs: PEER0(12) PEER2(12) PEER3(12) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=10000 B=1000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","10000","b","1000"]},"secureContext":"test_user3"},"id":31}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 1/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (10000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:10000/1000 2:10000/1000 3:10000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 1/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (9990/1010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9990/1010 2:9990/1010 3:9990/1010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (19). Actual CHs: PEER0(19) PEER2(19) PEER3(19) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after RESTART and Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for ee744d74a3cf6b25946c1058959956a9c51edc2590697e361ecb9329b691f666c5216a0dc0e5b086358549467c68a558516502df6ed49af59c2593384370a886 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for ee744d74a3cf6b25946c1058959956a9c51edc2590697e361ecb9329b691f666c5216a0dc0e5b086358549467c68a558516502df6ed49af59c2593384370a886 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (9980/1020) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9980/1020 1:0/0 2:9980/1020 3:9980/1020 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (24). Actual CHs: PEER0(24) PEER1(6) PEER2(24) PEER3(24) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (9970/1030) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:9970/1030 2:9970/1030 3:9970/1030 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (30). Actual CHs: PEER0(30) PEER2(30) PEER3(30) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=20000 B=2000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","20000","b","2000"]},"secureContext":"test_user3"},"id":88}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 2/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (20000/2000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:20000/2000 2:20000/2000 3:20000/2000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (31). Actual CHs: PEER0(31) PEER2(31) PEER3(31) 

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 2/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (19990/2010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19990/2010 2:19990/2010 3:19990/2010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (37). Actual CHs: PEER0(37) PEER2(37) PEER3(37) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after RESTART and Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 281f821fe8f442bae89252c7c2713e7ed0bce5743b0af3009b48fd675475d65148d63d411ec68da71be433d850751588dae19c019897530aaa6d410e1c536420 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 281f821fe8f442bae89252c7c2713e7ed0bce5743b0af3009b48fd675475d65148d63d411ec68da71be433d850751588dae19c019897530aaa6d410e1c536420 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (19980/2020) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19980/2020 1:0/0 2:19980/2020 3:19980/2020 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (42). Actual CHs: PEER0(42) PEER1(6) PEER2(42) PEER3(42) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (19970/2030) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:19970/2030 2:19970/2030 3:19970/2030 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (48). Actual CHs: PEER0(48) PEER2(48) PEER3(48) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=30000 B=3000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","30000","b","3000"]},"secureContext":"test_user3"},"id":145}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 3/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (30000/3000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:30000/3000 2:30000/3000 3:30000/3000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (49). Actual CHs: PEER0(49) PEER2(49) PEER3(49) 

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 3/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (29990/3010) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:29990/3010 2:29990/3010 3:29990/3010 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (55). Actual CHs: PEER0(55) PEER2(55) PEER3(55) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after RESTART and Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 491105a6cdf7a26c5dc38755156dcf8030c1e0e9c0b075d2841b83d89447430c0d85a36a65d60478c16b8cb54c66ee47a27e15fee5e21ee30e1d866b973983ec - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 491105a6cdf7a26c5dc38755156dcf8030c1e0e9c0b075d2841b83d89447430c0d85a36a65d60478c16b8cb54c66ee47a27e15fee5e21ee30e1d866b973983ec - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (29980/3020) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:29980/3020 1:0/0 2:29980/3020 3:29980/3020 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (60). Actual CHs: PEER0(60) PEER1(6) PEER2(60) PEER3(60) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_105_S1_IQDQIQ_R1_IQIQ_repeats.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [13m21.738397107s]  

-----------
----------- go run CAT_105_S1_IQDQIQ_R1_IQIQ_repeats.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 00:32:04 UTC 2016 -----------


----------- go run CAT_106_S1_IQDQIQ_R1_IQ_S2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 00:32:04 UTC 2016 -----------
-----------

BEGIN  CAT_106_S1_IQDQIQ_R1_IQ_S2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 00:32:05.790729309 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
0a07e2b63dd724441bf7a456bb16517a039f11b0188b4b5309ddef683ea9fa29
--------> Starting hyperledger PEER0
6acdf0d2c2abcf626285c3d739d016147b041a2c9d35ab49c8b1a41fb83cc904
--------> Starting hyperledger PEER1 <-----------
9c28481d7e38bb71f8bac2c651d7782e19d249c16d55622f1ed149798066c754
--------> Starting hyperledger PEER2 <-----------
22f842f330f78a72f54bbd073d14695acfb6816a8e581a4e9ab87a62aa4d1014
--------> Starting hyperledger PEER3 <-----------
2843ab5dddfd401dd93fe2ce6c84887194145c8e32e618455700f2534efe441c
--------> Printing list of Docker Containers
CONTAINERS: 2843ab5dddfd 22f842f330f7 9c28481d7e38 6acdf0d2c2ab
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 6acdf0d2c2ab   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 9c28481d7e38   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 22f842f330f7   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 2843ab5dddfd   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999993/1000007) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999993/1000007 2:999993/1000007 3:999993/1000007 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (9). Actual CHs: PEER0(9) PEER2(9) PEER3(9) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=50000 B=50000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","50000","b","50000"]},"secureContext":"test_user3"},"id":24}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (50000/50000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:50000/50000 2:50000/50000 3:50000/50000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (10). Actual CHs: PEER0(10) PEER2(10) PEER3(10) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Invokes on each peer
PASSED QUERY TEST: Expected A/B (49997/50003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:49997/50003 2:49997/50003 3:49997/50003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart
>>> Sleep extra 60 secs before invokes because deploy occurred while peer was stopped <<<

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........>>> Sleep extra 60 secs after invokes because deploy occurred while peer was stopped <<<

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (49897/50103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:49897/50103 1:49897/50103 2:49897/50103 3:49897/50103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (65). Actual CHs: PEER0(65) PEER1(65) PEER2(65) PEER3(65) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (8) using peer 3
>>> Sleep extra 60 secs for recovery, because deploy occurred while peer was stopped <<<

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 13, after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (49886/50114) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:49886/50114 1:49886/50114 3:49886/50114 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (71). Actual CHs: PEER0(71) PEER1(71) PEER3(71) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_106_S1_IQDQIQ_R1_IQ_S2_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [7m43.434033602s]  

ERROR: Could not exec docker start 2
[]
-----------
----------- go run CAT_106_S1_IQDQIQ_R1_IQ_S2_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 00:39:49 UTC 2016 -----------


----------- go run CAT_107_S1_IQDQIQ_R1_IQ_S0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 00:39:49 UTC 2016 -----------
-----------

BEGIN  CAT_107_S1_IQDQIQ_R1_IQ_S0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 00:39:50.693666082 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
093d80ab2cd5733e8327a3eafa789f47c9cb28693f7c120382006feaee98a84d
--------> Starting hyperledger PEER0
b138a80b5828952701e1e77b3e981154888fe880eff1876003de220f83e9272e
--------> Starting hyperledger PEER1 <-----------
8e892204440ab639b935e0a94621611bd13ced45eef4ca0ba9c2cff986706426
--------> Starting hyperledger PEER2 <-----------
bc0ba7da082ef76b973d2d427b8de225154740f972c2eb17ec2782966ff16a52
--------> Starting hyperledger PEER3 <-----------
00ebb134bfb2ac211deed7e843e8a1385ac10ce8e7ae407e263d25d4af7d773b
--------> Printing list of Docker Containers
CONTAINERS: 00ebb134bfb2 bc0ba7da082e 8e892204440a b138a80b5828
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID b138a80b5828   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 8e892204440a   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID bc0ba7da082e   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 00ebb134bfb2   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : concurrency
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999993/1000007) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999993/1000007 2:999993/1000007 3:999993/1000007 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (9). Actual CHs: PEER0(9) PEER2(9) PEER3(9) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000 B=1000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000","b","1000"]},"secureContext":"test_user3"},"id":24}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (1000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:1000/1000 2:1000/1000 3:1000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (10). Actual CHs: PEER0(10) PEER2(10) PEER3(10) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Invokes on each peer
PASSED QUERY TEST: Expected A/B (997/1003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997/1003 2:997/1003 3:997/1003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (897/1103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:897/1103 1:897/1103 2:897/1103 3:897/1103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (65). Actual CHs: PEER0(65) PEER1(65) PEER2(65) PEER3(65) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 13, after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (797/1203) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:797/1203 2:797/1203 3:797/1203 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (116). Actual CHs: PEER1(115) PEER2(115) PEER3(115) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_107_S1_IQDQIQ_R1_IQ_S0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [6m34.935483096s]  

ERROR: Could not exec docker start 0
[]
-----------
----------- go run CAT_107_S1_IQDQIQ_R1_IQ_S0_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 00:46:25 UTC 2016 -----------


----------- go run CAT_108_S0_IQDQIQ_R0_IQIQ_repeats.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 00:46:25 UTC 2016 -----------
-----------

BEGIN  CAT_108_S0_IQDQIQ_R0_IQIQ_repeats.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 00:46:27.177707444 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
27dba6c30734a82d27d02131729cec74897ef24b0aafe8681a5d90900306410f
--------> Starting hyperledger PEER0
25aea675977ebb6cc4b62f480259b92805eb44db4b9baf6cb50c419365e58f18
--------> Starting hyperledger PEER1 <-----------
6e3577f5eee2c20c3757ab222517f84db54632f091ea8b3b4a160d2055cbbe6b
--------> Starting hyperledger PEER2 <-----------
1fabe9c084c88d6c32712f9800f1ef7726ff235cf7893e246e38e9b6c9dccc1f
--------> Starting hyperledger PEER3 <-----------
03d6c06fa3eb31303a902ce257d11f0df23b64dcd24cd777c1c52049922c8118
--------> Printing list of Docker Containers
CONTAINERS: 03d6c06fa3eb 1fabe9c084c8 6e3577f5eee2 25aea675977e
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 25aea675977e   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 6e3577f5eee2   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 1fabe9c084c8   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 03d6c06fa3eb   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999986/1000014) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999986/1000014 2:999986/1000014 3:999986/1000014 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (12). Actual CHs: PEER1(11) PEER2(11) PEER3(11) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000 B=1000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000","b","1000"]},"secureContext":"test_user3"},"id":31}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 1/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (1000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1000/1000 2:1000/1000 3:1000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER1(12) PEER2(12) PEER3(12) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 1/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (997/1003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:997/1003 2:997/1003 3:997/1003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (16). Actual CHs: PEER1(15) PEER2(15) PEER3(15) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/3 after RESTART and Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for baa3b5e967a45b4af139578a21a74532cff38975e59e9b43bcd7143db2dfee7acb2029d891486fb88841be3b8673193c268cbffc9c54803df00134f9ce8c4034 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for baa3b5e967a45b4af139578a21a74532cff38975e59e9b43bcd7143db2dfee7acb2029d891486fb88841be3b8673193c268cbffc9c54803df00134f9ce8c4034 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (987/1013) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:987/1013 2:987/1013 3:987/1013 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (21). Actual CHs: PEER0(6) PEER1(20) PEER2(20) PEER3(20) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (977/1023) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:977/1023 2:977/1023 3:977/1023 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (27). Actual CHs: PEER1(26) PEER2(26) PEER3(26) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=2000 B=2000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","2000","b","2000"]},"secureContext":"test_user3"},"id":81}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 2/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (2000/2000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:2000/2000 2:2000/2000 3:2000/2000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (28). Actual CHs: PEER1(27) PEER2(27) PEER3(27) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 2/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (1997/2003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1997/2003 2:1997/2003 3:1997/2003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (31). Actual CHs: PEER1(30) PEER2(30) PEER3(30) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 2/3 after RESTART and Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for b419a3cc3731189ac0e598ba4c879a85f80ded57f77f5abf4756461daffda6d18217e9bcdc3082438eac082b47d727dfbfe437fc44d84fcb74c2e3bceb1a6b80 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for b419a3cc3731189ac0e598ba4c879a85f80ded57f77f5abf4756461daffda6d18217e9bcdc3082438eac082b47d727dfbfe437fc44d84fcb74c2e3bceb1a6b80 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (1987/2013) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:1987/2013 2:1987/2013 3:1987/2013 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (36). Actual CHs: PEER0(6) PEER1(35) PEER2(35) PEER3(35) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (10) divided among all 3 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (1977/2023) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1977/2023 2:1977/2023 3:1977/2023 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (42). Actual CHs: PEER1(41) PEER2(41) PEER3(41) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=3000 B=3000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","3000","b","3000"]},"secureContext":"test_user3"},"id":131}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, cycle 3/3 after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (3000/3000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:3000/3000 2:3000/3000 3:3000/3000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (43). Actual CHs: PEER1(42) PEER2(42) PEER3(42) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, cycle 3/3 after Invokes on each peer
PASSED QUERY TEST: Expected A/B (2997/3003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:2997/3003 2:2997/3003 3:2997/3003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (46). Actual CHs: PEER1(45) PEER2(45) PEER3(45) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (10) divided among all 4 running peers

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 3/3 after RESTART and Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 6aa439266cfe8b080156eff7d80e0b3932ef6d3d40cbbc3c7879a108ea68a5efe3e4b89fb9119a61e8723515832de1c8355e808c803e2fa805b64d60eeb8dd11 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 6aa439266cfe8b080156eff7d80e0b3932ef6d3d40cbbc3c7879a108ea68a5efe3e4b89fb9119a61e8723515832de1c8355e808c803e2fa805b64d60eeb8dd11 - LedgerError - ResourceNotFound: ledger: resource not found)
PASSED QUERY TEST: Expected A/B (2987/3013) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:2987/3013 2:2987/3013 3:2987/3013 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (51). Actual CHs: PEER0(6) PEER1(50) PEER2(50) PEER3(50) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_108_S0_IQDQIQ_R0_IQIQ_repeats.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [15m43.90325715s]  

-----------
----------- go run CAT_108_S0_IQDQIQ_R0_IQIQ_repeats.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 01:02:11 UTC 2016 -----------


----------- go run CAT_109_S0_IQDQIQ_R0_IQ_S2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 01:02:11 UTC 2016 -----------
-----------

BEGIN  CAT_109_S0_IQDQIQ_R0_IQ_S2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 01:02:12.693861484 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
f97904cb01aead47af5acd8038783418e89665fbffa200181061c1357c9ab824
--------> Starting hyperledger PEER0
06e108ea4ac761235b69775c27951a7036c5fb36029bd749d7dbb702d89d0139
--------> Starting hyperledger PEER1 <-----------
618081c0d111626f3a52f4f1c4073b59579ca2758fff0465729797af9802fb70
--------> Starting hyperledger PEER2 <-----------
4dd1a5c3a9094d0210593b1f902c7a369a5dbb73bf59dd2a31220052d2161a75
--------> Starting hyperledger PEER3 <-----------
648022951e581b2d780e05c67fa0400cb7f768a126daf25fb36a3ac586a0e170
--------> Printing list of Docker Containers
CONTAINERS: 648022951e58 4dd1a5c3a909 618081c0d111 06e108ea4ac7
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 06e108ea4ac7   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 618081c0d111   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 4dd1a5c3a909   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 648022951e58   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(56) PEER2(56) PEER3(56) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000 B=1000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000","b","1000"]},"secureContext":"test_user3"},"id":121}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (1000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1000/1000 2:1000/1000 3:1000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Invokes on each peer
PASSED QUERY TEST: Expected A/B (997/1003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:997/1003 2:997/1003 3:997/1003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (61). Actual CHs: PEER1(60) PEER2(60) PEER3(60) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (897/1103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:975/1025 1:897/1103 2:897/1103 3:897/1103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(71) PEER1(112) PEER2(112) PEER3(112) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (200) divided among all 3 running peers
..................
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 13, after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (697/1303) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:697/1303 1:697/1303 3:697/1303 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (213). Actual CHs: PEER0(212) PEER1(212) PEER3(212) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_109_S0_IQDQIQ_R0_IQ_S2_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [8m17.528972759s]  

After start peer, sleep 5 secs
-----------
----------- go run CAT_109_S0_IQDQIQ_R0_IQ_S2_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 01:10:35 UTC 2016 -----------


----------- go run CAT_110_S0_IQDQIQ_R0_IQ_S1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 01:10:35 UTC 2016 -----------
-----------

BEGIN  CAT_110_S0_IQDQIQ_R0_IQ_S1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 01:10:36.680100739 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
34b52dab99e18613fefbc715a429e01b53399ac7f9b31b1fbd5afcc8b4504b21
--------> Starting hyperledger PEER0
e1d12aaf5663336c50437441c65a70441aff6ba3d0414367036dcf82f6d6a567
--------> Starting hyperledger PEER1 <-----------
02a0cf3577d9797ffa8744c412070259d79f311cda20be3e28fcef397c06a410
--------> Starting hyperledger PEER2 <-----------
380598a38aff307f3c7f5c072e68c85019e9ab65d1d42927606218ae4e984e2a
--------> Starting hyperledger PEER3 <-----------
d541a7b600e27853aa6ad1bd87c6e045e8d9d8e1d055723c4e46446ec388b861
--------> Printing list of Docker Containers
CONTAINERS: d541a7b600e2 380598a38aff 02a0cf3577d9 e1d12aaf5663
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID e1d12aaf5663   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 02a0cf3577d9   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 380598a38aff   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID d541a7b600e2   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(56) PEER2(56) PEER3(56) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000 B=1000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000","b","1000"]},"secureContext":"test_user3"},"id":121}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (1000/1000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1000/1000 2:1000/1000 3:1000/1000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Invokes on each peer
PASSED QUERY TEST: Expected A/B (997/1003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:997/1003 2:997/1003 3:997/1003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (61). Actual CHs: PEER1(60) PEER2(60) PEER3(60) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (897/1103) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:975/1025 1:897/1103 2:897/1103 3:897/1103 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(71) PEER1(112) PEER2(112) PEER3(112) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 13, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (797/1203) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:797/1203 2:797/1203 3:797/1203 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (164). Actual CHs: PEER0(162) PEER2(162) PEER3(162) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_110_S0_IQDQIQ_R0_IQ_S1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [7m7.339842864s]  

ERROR: Could not exec docker start 1
[]
-----------
----------- go run CAT_110_S0_IQDQIQ_R0_IQ_S1_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 01:17:44 UTC 2016 -----------


----------- go run CAT_111_SnIQRnIQ_cycleDownLoop.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 01:17:44 UTC 2016 -----------
-----------

BEGIN  CAT_111_SnIQRnIQ_cycleDownLoop.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 01:17:45.489989936 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
458a23f0442728313cff9727315a2e46ea55d86fc7bf205ad69201cb0c2e5d3a
--------> Starting hyperledger PEER0
c7bb833142642f1e2070d88d82e36e492efb94cac481ec5bba09cc89667c3e2b
--------> Starting hyperledger PEER1 <-----------
d1dde3f809a761186eabffee4cdcae7e6276672a4ea48b3db3069543d0fa0a2c
--------> Starting hyperledger PEER2 <-----------
6ed706a36d805424a3de99fbb6e97764d8af8038628efc210eedb0ee4ca4f326
--------> Starting hyperledger PEER3 <-----------
e5abe3024fabe06b864db502798c1d31b3999f9ec4f5ea5e9af8ffaed6bbce34
--------> Printing list of Docker Containers
CONTAINERS: e5abe3024fab 6ed706a36d80 d1dde3f809a7 c7bb83314264
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID c7bb83314264   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID d1dde3f809a7   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 6ed706a36d80   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID e5abe3024fab   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999896/1000104 1:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER0(56) PEER1(56) PEER3(56) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999796/1000204 1:999796/1000204 2:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER0(108) PEER1(108) PEER2(108) PEER3(108) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999696/1000304) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999696/1000304 2:999696/1000304 3:999696/1000304 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER0(158) PEER2(158) PEER3(158) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999596/1000404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999596/1000404 1:999596/1000404 2:999596/1000404 3:999596/1000404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (212). Actual CHs: PEER0(210) PEER1(210) PEER2(210) PEER3(210) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999496/1000504) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999496/1000504 2:999496/1000504 3:999496/1000504 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (263). Actual CHs: PEER1(260) PEER2(260) PEER3(260) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999396/1000604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999474/1000526 1:999396/1000604 2:999396/1000604 3:999396/1000604 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (315). Actual CHs: PEER0(271) PEER1(312) PEER2(312) PEER3(312) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, end cycle 1/3 after many Invokes 
PASSED QUERY TEST: Expected A/B (998396/1001604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998398/1001602 1:998396/1001604 2:998396/1001604 3:998396/1001604 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (815). Actual CHs: PEER0(811) PEER1(812) PEER2(812) PEER3(812) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (998296/1001704) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998296/1001704 1:998296/1001704 3:998296/1001704 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (866). Actual CHs: PEER0(862) PEER1(862) PEER3(862) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (998196/1001804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998196/1001804 1:998196/1001804 2:998263/1001737 3:998196/1001804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (918). Actual CHs: PEER0(914) PEER1(914) PEER2(879) PEER3(914) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (998096/1001904) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998096/1001904 2:998096/1001904 3:998096/1001904 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (969). Actual CHs: PEER0(964) PEER2(964) PEER3(964) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (997996/1002004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997996/1002004 1:998047/1001953 2:997996/1002004 3:997996/1002004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1021). Actual CHs: PEER0(1016) PEER1(989) PEER2(1016) PEER3(1016) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (997896/1002104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:997896/1002104 2:997896/1002104 3:997896/1002104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1072). Actual CHs: PEER1(1066) PEER2(1066) PEER3(1066) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (997796/1002204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997871/1002129 1:997796/1002204 2:997796/1002204 3:997796/1002204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1124). Actual CHs: PEER0(1079) PEER1(1118) PEER2(1118) PEER3(1118) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, end cycle 2/3 after many Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (996796/1003204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:996796/1003204 2:996796/1003204 3:996796/1003204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1624). Actual CHs: PEER0(1559) PEER1(1618) PEER2(1618) PEER3(1618) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (996696/1003304) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:996696/1003304 1:996696/1003304 3:996696/1003304 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1675). Actual CHs: PEER0(1668) PEER1(1668) PEER3(1668) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (996596/1003404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:996596/1003404 1:996596/1003404 2:996671/1003329 3:996596/1003404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1727). Actual CHs: PEER0(1720) PEER1(1720) PEER2(1681) PEER3(1720) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 1 and Invokes
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996496   1003504.
ACTUALs:
Peer 0           996474   1003526
Peer 2           996474   1003526
Peer 3           996474   1003526
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1778). Actual CHs: PEER0(1781) PEER2(1781) PEER3(1781) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996396   1003604.
ACTUALs:
Peer 0           996374   1003626
Peer 1           996437   1003563
Peer 2           996374   1003626
Peer 3           996374   1003626
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1830). Actual CHs: PEER0(1833) PEER1(1800) PEER2(1833) PEER3(1833) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 0 and Invokes
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996296   1003704.
ACTUALs:
Peer 1           996242   1003758
Peer 2           996242   1003758
Peer 3           996242   1003758
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1881). Actual CHs: PEER1(1900) PEER2(1900) PEER3(1900) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996196   1003804.
ACTUALs:
Peer 0           996205   1003795
Peer 1           996142   1003858
Peer 2           996142   1003858
Peer 3           996142   1003858
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1933). Actual CHs: PEER0(1919) PEER1(1952) PEER2(1952) PEER3(1952) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, end cycle 3/3 after many Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    995196   1004804.
ACTUALs:
Peer 0                0         0
Peer 1           995142   1004858
Peer 2           995142   1004858
Peer 3           995142   1004858
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2433). Actual CHs: PEER0(2399) PEER1(2452) PEER2(2452) PEER3(2452) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    995096   1004904.
ACTUALs:
Peer 0           995128   1004872
Peer 1           995042   1004958
Peer 2           995042   1004958
Peer 3           995042   1004958
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2485). Actual CHs: PEER0(2459) PEER1(2504) PEER2(2504) PEER3(2504) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    995096   1004904.
ACTUALs:
Peer 0           995128   1004872
Peer 1           995042   1004958
Peer 2           995042   1004958
Peer 3           995042   1004958
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2485). Actual CHs: PEER0(2459) PEER1(2504) PEER2(2504) PEER3(2504) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994996   1005004.
ACTUALs:
Peer 0           995013   1004987
Peer 1           994942   1005058
Peer 2           994942   1005058
Peer 3           994942   1005058
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2537). Actual CHs: PEER0(2519) PEER1(2556) PEER2(2556) PEER3(2556) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994996   1005004.
ACTUALs:
Peer 0           995013   1004987
Peer 1           994942   1005058
Peer 2           994942   1005058
Peer 3           994942   1005058
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2537). Actual CHs: PEER0(2519) PEER1(2556) PEER2(2556) PEER3(2556) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994896   1005104.
ACTUALs:
Peer 0           994897   1005103
Peer 1           994842   1005158
Peer 2           994842   1005158
Peer 3           994842   1005158
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2589). Actual CHs: PEER0(2579) PEER1(2608) PEER2(2608) PEER3(2608) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994896   1005104.
ACTUALs:
Peer 0           994897   1005103
Peer 1           994842   1005158
Peer 2           994842   1005158
Peer 3           994842   1005158
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2589). Actual CHs: PEER0(2579) PEER1(2608) PEER2(2608) PEER3(2608) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994796   1005204.
ACTUALs:
Peer 0           994782   1005218
Peer 1           994742   1005258
Peer 2           994742   1005258
Peer 3           994742   1005258
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2641). Actual CHs: PEER0(2639) PEER1(2660) PEER2(2660) PEER3(2660) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994796   1005204.
ACTUALs:
Peer 0           994782   1005218
Peer 1           994742   1005258
Peer 2           994742   1005258
Peer 3           994742   1005258
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2641). Actual CHs: PEER0(2639) PEER1(2660) PEER2(2660) PEER3(2660) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994696   1005304.
ACTUALs:
Peer 0           994667   1005333
Peer 1           994642   1005358
Peer 2           994642   1005358
Peer 3           994642   1005358
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2693). Actual CHs: PEER0(2699) PEER1(2712) PEER2(2712) PEER3(2712) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994696   1005304.
ACTUALs:
Peer 0           994667   1005333
Peer 1           994642   1005358
Peer 2           994642   1005358
Peer 3           994642   1005358
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2693). Actual CHs: PEER0(2699) PEER1(2712) PEER2(2712) PEER3(2712) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994596   1005404.
ACTUALs:
Peer 0           994551   1005449
Peer 1           994542   1005458
Peer 2           994542   1005458
Peer 3           994542   1005458
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2745). Actual CHs: PEER0(2759) PEER1(2764) PEER2(2764) PEER3(2764) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994596   1005404.
ACTUALs:
Peer 0           994551   1005449
Peer 1           994542   1005458
Peer 2           994542   1005458
Peer 3           994542   1005458
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2745). Actual CHs: PEER0(2759) PEER1(2764) PEER2(2764) PEER3(2764) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994496   1005504.
ACTUALs:
Peer 0                0         0
Peer 1           994442   1005558
Peer 2           994442   1005558
Peer 3           994442   1005558
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2797). Actual CHs: PEER0(2759) PEER1(2816) PEER2(2816) PEER3(2816) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994496   1005504.
ACTUALs:
Peer 0                0         0
Peer 1           994442   1005558
Peer 2           994442   1005558
Peer 3           994442   1005558
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2797). Actual CHs: PEER0(2759) PEER1(2816) PEER2(2816) PEER3(2816) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994396   1005604.
ACTUALs:
Peer 0           994436   1005564
Peer 1           994342   1005658
Peer 2           994342   1005658
Peer 3           994342   1005658
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2849). Actual CHs: PEER0(2819) PEER1(2868) PEER2(2868) PEER3(2868) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994396   1005604.
ACTUALs:
Peer 0           994436   1005564
Peer 1           994342   1005658
Peer 2           994342   1005658
Peer 3           994342   1005658
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2849). Actual CHs: PEER0(2819) PEER1(2868) PEER2(2868) PEER3(2868) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994296   1005704.
ACTUALs:
Peer 0           994320   1005680
Peer 1           994242   1005758
Peer 2           994242   1005758
Peer 3           994242   1005758
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2901). Actual CHs: PEER0(2879) PEER1(2920) PEER2(2920) PEER3(2920) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994296   1005704.
ACTUALs:
Peer 0           994320   1005680
Peer 1           994242   1005758
Peer 2           994242   1005758
Peer 3           994242   1005758
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2901). Actual CHs: PEER0(2879) PEER1(2920) PEER2(2920) PEER3(2920) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994196   1005804.
ACTUALs:
Peer 0           994205   1005795
Peer 1           994142   1005858
Peer 2           994142   1005858
Peer 3           994142   1005858
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2953). Actual CHs: PEER0(2939) PEER1(2972) PEER2(2972) PEER3(2972) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    994196   1005804.
ACTUALs:
Peer 0           994205   1005795
Peer 1           994142   1005858
Peer 2           994142   1005858
Peer 3           994142   1005858
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2953). Actual CHs: PEER0(2939) PEER1(2972) PEER2(2972) PEER3(2972) 

FAILED CAT_111_SnIQRnIQ_cycleDownLoop.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [35m24.796476963s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_111_SnIQRnIQ_cycleDownLoop.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 01:53:10 UTC 2016 -----------


----------- go run CAT_112_SnIQRnIQ_cycleUpLoop.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 01:53:10 UTC 2016 -----------
-----------

BEGIN  CAT_112_SnIQRnIQ_cycleUpLoop.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 01:53:11.754438666 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
fdc10e1d1540b15a74a0fa3e086c5440e573105ff8b2567fcd50e6aea9d30bc8
--------> Starting hyperledger PEER0
4f5355a017d42a40ad35049a66da75099a6d0e8813a7b5420ce0cf96b0aaa35a
--------> Starting hyperledger PEER1 <-----------
38dbb37e1c5afb64777ced61fbe3551eeaf27d9f4ec12a09cfc16ca25206972d
--------> Starting hyperledger PEER2 <-----------
4b5ebe48595d791891c04e6a57707f699483b5c3a25f8a4c432579d07b19a371
--------> Starting hyperledger PEER3 <-----------
8aa7f99f5924342f41c13bcb785104436096a8599ab93d4192f562b997e87776
--------> Printing list of Docker Containers
CONTAINERS: 8aa7f99f5924 4b5ebe48595d 38dbb37e1c5a 4f5355a017d4
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 4f5355a017d4   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 38dbb37e1c5a   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 4b5ebe48595d   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 8aa7f99f5924   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
  type  GOLANG
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(56) PEER2(56) PEER3(56) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999867/1000133 1:999796/1000204 2:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER0(71) PEER1(108) PEER2(108) PEER3(108) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999696/1000304) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999696/1000304 2:999696/1000304 3:999696/1000304 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER0(158) PEER2(158) PEER3(158) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999596/1000404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999596/1000404 1:999671/1000329 2:999596/1000404 3:999596/1000404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (212). Actual CHs: PEER0(210) PEER1(171) PEER2(210) PEER3(210) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (999496/1000504) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999496/1000504 1:999496/1000504 3:999496/1000504 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (263). Actual CHs: PEER0(260) PEER1(260) PEER3(260) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999396/1000604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999396/1000604 1:999396/1000604 2:999474/1000526 3:999396/1000604 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (315). Actual CHs: PEER0(312) PEER1(312) PEER2(271) PEER3(312) 

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (999296/1000704) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999296/1000704 1:999296/1000704 2:999296/1000704 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (366). Actual CHs: PEER0(362) PEER1(362) PEER2(362) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999196/1000804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999196/1000804 1:999196/1000804 2:999196/1000804 3:999271/1000729 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (418). Actual CHs: PEER0(414) PEER1(414) PEER2(414) PEER3(375) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, end cycle 1/3 after many Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (998196/1001804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998196/1001804 1:998196/1001804 2:998196/1001804 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (918). Actual CHs: PEER0(914) PEER1(914) PEER2(914) PEER3(855) 

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 1/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (997996/1002004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997996/1002004 1:997996/1002004 2:997996/1002004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1020). Actual CHs: PEER0(1014) PEER1(1014) PEER2(1014) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (997796/1002204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997796/1002204 1:997796/1002204 2:997796/1002204 3:997859/1002141 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1124). Actual CHs: PEER0(1118) PEER1(1118) PEER2(1118) PEER3(1085) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 1/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (997596/1002404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997596/1002404 1:997596/1002404 3:997596/1002404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1226). Actual CHs: PEER0(1219) PEER1(1219) PEER3(1219) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (997396/1002604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997396/1002604 1:997396/1002604 2:997459/1002541 3:997396/1002604 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1330). Actual CHs: PEER0(1323) PEER1(1323) PEER2(1290) PEER3(1323) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 1/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (997196/1002804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997196/1002804 2:997196/1002804 3:997196/1002804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1432). Actual CHs: PEER0(1423) PEER2(1423) PEER3(1423) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (996996/1003004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:996996/1003004 1:997047/1002953 2:996996/1003004 3:996996/1003004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1536). Actual CHs: PEER0(1527) PEER1(1500) PEER2(1527) PEER3(1527) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 1/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (996796/1003204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:996796/1003204 2:996796/1003204 3:996796/1003204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1638). Actual CHs: PEER1(1627) PEER2(1627) PEER3(1627) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 1/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (996596/1003404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:996657/1003343 1:996596/1003404 2:996596/1003404 3:996596/1003404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1742). Actual CHs: PEER0(1699) PEER1(1731) PEER2(1731) PEER3(1731) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, end cycle 1/3 after many Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (995596/1004404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:995596/1004404 2:995596/1004404 3:995596/1004404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2242). Actual CHs: PEER0(2179) PEER1(2231) PEER2(2231) PEER3(2231) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (995496/1004504) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:995496/1004504 2:995496/1004504 3:995496/1004504 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2293). Actual CHs: PEER1(2282) PEER2(2282) PEER3(2282) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (995396/1004604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:995463/1004537 1:995396/1004604 2:995396/1004604 3:995396/1004604 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2345). Actual CHs: PEER0(2299) PEER1(2334) PEER2(2334) PEER3(2334) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (995296/1004704) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:995296/1004704 2:995296/1004704 3:995296/1004704 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2396). Actual CHs: PEER0(2384) PEER2(2384) PEER3(2384) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (995196/1004804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:995196/1004804 1:995267/1004733 2:995196/1004804 3:995196/1004804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2448). Actual CHs: PEER0(2436) PEER1(2399) PEER2(2436) PEER3(2436) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (995096/1004904) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:995096/1004904 1:995096/1004904 3:995096/1004904 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2499). Actual CHs: PEER0(2486) PEER1(2486) PEER3(2486) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (994996/1005004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:994996/1005004 1:994996/1005004 2:995072/1004928 3:994996/1005004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2551). Actual CHs: PEER0(2538) PEER1(2538) PEER2(2498) PEER3(2538) 

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 2/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (994896/1005104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:994896/1005104 1:994896/1005104 2:994896/1005104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2602). Actual CHs: PEER0(2588) PEER1(2588) PEER2(2588) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (994796/1005204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:994796/1005204 1:994796/1005204 2:994796/1005204 3:994859/1005141 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (2654). Actual CHs: PEER0(2640) PEER1(2640) PEER2(2640) PEER3(2607) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, end cycle 2/3 after many Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (993796/1006204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:993796/1006204 1:993796/1006204 2:993796/1006204 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (3154). Actual CHs: PEER0(3140) PEER1(3140) PEER2(3140) PEER3(3087) 

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 2/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (993596/1006404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:993596/1006404 1:993596/1006404 2:993596/1006404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (3256). Actual CHs: PEER0(3240) PEER1(3240) PEER2(3240) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (993396/1006604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:993396/1006604 1:993396/1006604 2:993396/1006604 3:993447/1006553 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (3360). Actual CHs: PEER0(3344) PEER1(3344) PEER2(3344) PEER3(3317) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 2/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (993196/1006804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:993196/1006804 1:993196/1006804 3:993196/1006804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (3462). Actual CHs: PEER0(3445) PEER1(3445) PEER3(3445) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (992996/1007004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:992996/1007004 1:992996/1007004 2:993059/1006941 3:992996/1007004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (3566). Actual CHs: PEER0(3549) PEER1(3549) PEER2(3516) PEER3(3549) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 2/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (992796/1007204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:992796/1007204 2:992796/1007204 3:992796/1007204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (3668). Actual CHs: PEER0(3649) PEER2(3649) PEER3(3649) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (992596/1007404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:992596/1007404 1:992647/1007353 2:992596/1007404 3:992596/1007404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (3772). Actual CHs: PEER0(3753) PEER1(3726) PEER2(3753) PEER3(3753) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 2/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (992396/1007604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:992396/1007604 2:992396/1007604 3:992396/1007604 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (3874). Actual CHs: PEER1(3854) PEER2(3854) PEER3(3854) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 2/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (992196/1007804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:992259/1007741 1:992196/1007804 2:992196/1007804 3:992196/1007804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (3978). Actual CHs: PEER0(3925) PEER1(3958) PEER2(3958) PEER3(3958) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, end cycle 2/3 after many Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (991196/1008804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:0/0 1:991196/1008804 2:991196/1008804 3:991196/1008804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (4478). Actual CHs: PEER0(4405) PEER1(4458) PEER2(4458) PEER3(4458) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (991096/1008904) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:991096/1008904 2:991096/1008904 3:991096/1008904 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (4529). Actual CHs: PEER1(4508) PEER2(4508) PEER3(4508) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (990996/1009004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:991063/1008937 1:990996/1009004 2:990996/1009004 3:990996/1009004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (4581). Actual CHs: PEER0(4525) PEER1(4560) PEER2(4560) PEER3(4560) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (990896/1009104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:990896/1009104 2:990896/1009104 3:990896/1009104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (4632). Actual CHs: PEER0(4610) PEER2(4610) PEER3(4610) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (990796/1009204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:990796/1009204 1:990869/1009131 2:990796/1009204 3:990796/1009204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (4684). Actual CHs: PEER0(4662) PEER1(4624) PEER2(4662) PEER3(4662) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (990696/1009304) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:990696/1009304 1:990696/1009304 3:990696/1009304 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (4735). Actual CHs: PEER0(4712) PEER1(4712) PEER3(4712) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (990596/1009404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:990596/1009404 1:990596/1009404 2:990672/1009328 3:990596/1009404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (4787). Actual CHs: PEER0(4764) PEER1(4764) PEER2(4724) PEER3(4764) 

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 3/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (990496/1009504) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:990496/1009504 1:990496/1009504 2:990496/1009504 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (4838). Actual CHs: PEER0(4814) PEER1(4814) PEER2(4814) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (990396/1009604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:990396/1009604 1:990396/1009604 2:990396/1009604 3:990459/1009541 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (4890). Actual CHs: PEER0(4866) PEER1(4866) PEER2(4866) PEER3(4833) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, end cycle 3/3 after many Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (989396/1010604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:989396/1010604 1:989396/1010604 2:989396/1010604 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (5390). Actual CHs: PEER0(5366) PEER1(5366) PEER2(5366) PEER3(5313) 

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 3/3 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (989196/1010804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:989196/1010804 1:989196/1010804 2:989196/1010804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (5492). Actual CHs: PEER0(5468) PEER1(5468) PEER2(5468) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (988996/1011004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:988996/1011004 1:988996/1011004 2:988996/1011004 3:989051/1010949 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (5596). Actual CHs: PEER0(5572) PEER1(5572) PEER2(5572) PEER3(5543) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 3/3 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (988796/1011204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:988796/1011204 1:988796/1011204 3:988796/1011204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (5698). Actual CHs: PEER0(5672) PEER1(5672) PEER3(5672) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (988596/1011404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:988596/1011404 1:988596/1011404 2:988653/1011347 3:988596/1011404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (5802). Actual CHs: PEER0(5776) PEER1(5776) PEER2(5746) PEER3(5776) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 3/3 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (988396/1011604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:988396/1011604 2:988396/1011604 3:988396/1011604 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (5904). Actual CHs: PEER0(5876) PEER2(5876) PEER3(5876) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (988196/1011804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:988196/1011804 1:988244/1011756 2:988196/1011804 3:988196/1011804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6008). Actual CHs: PEER0(5980) PEER1(5955) PEER2(5980) PEER3(5980) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, cycle 3/3 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (987996/1012004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:987996/1012004 2:987996/1012004 3:987996/1012004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6110). Actual CHs: PEER1(6080) PEER2(6080) PEER3(6080) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, cycle 3/3 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (987796/1012204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:987834/1012166 1:987796/1012204 2:987796/1012204 3:987796/1012204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6214). Actual CHs: PEER0(6164) PEER1(6184) PEER2(6184) PEER3(6184) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, end cycle 3/3 after many Invokes 
PASSED QUERY TEST: Expected A/B (986796/1013204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:986876/1013124 1:986796/1013204 2:986796/1013204 3:986796/1013204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6714). Actual CHs: PEER0(6644) PEER1(6684) PEER2(6684) PEER3(6684) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_112_SnIQRnIQ_cycleUpLoop.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [1h5m14.857681185s]  

-----------
----------- go run CAT_112_SnIQRnIQ_cycleUpLoop.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 02:58:26 UTC 2016 -----------


----------- go run CAT_113_StopAndStartMemberServices.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 02:58:26 UTC 2016 -----------
-----------

BEGIN  CAT_113_StopAndStartMemberServices.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 02:58:28.076500659 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
a64d1bf6520ed863100ce865e7150344d7ab7dff0a58ff4fb9e63cb510b1d244
--------> Starting hyperledger PEER0
aaa0927e244b4f3a335203f58fcf5c19bb42b6eccb9cb8543c03be5735dd355d
--------> Starting hyperledger PEER1 <-----------
7339ca9b0fafb251019e510021472f4825702ef88003cb7c029fd12efac2d946
--------> Starting hyperledger PEER2 <-----------
044054b75a9c28497dd95b194a0bae74dfaf3e9ae86b4f63ce21c6c39f1f4662
--------> Starting hyperledger PEER3 <-----------
eb3a5bc47f7e884b7d7813c3891e0c1950052fe0c0ab435af52cbee0691fd369
--------> Printing list of Docker Containers
CONTAINERS: eb3a5bc47f7e 044054b75a9c 7339ca9b0faf aaa0927e244b
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID aaa0927e244b   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 7339ca9b0faf   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 044054b75a9c   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID eb3a5bc47f7e   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
  type  GOLANG
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 




STOP MemberServices (caserver)!




POST/Chaincode: INVOKEs (40) using peer 0
....
POST/Chaincode: INVOKEs (40) using peer 1
....
POST/Chaincode: INVOKEs (1) using peer 2

POST/Chaincode: INVOKEs (1) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after stopped caserver, loop=1/6  forced_delays_secs=8
PASSED QUERY TEST: Expected A/B (999914/1000086) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999914/1000086 1:999914/1000086 2:999914/1000086 3:999914/1000086 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (48). Actual CHs: PEER0(48) PEER1(48) PEER2(48) PEER3(48) 

POST/Chaincode: INVOKEs (40) using peer 0
....
POST/Chaincode: INVOKEs (40) using peer 1
....
POST/Chaincode: INVOKEs (1) using peer 2

POST/Chaincode: INVOKEs (1) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after stopped caserver, loop=2/6  forced_delays_secs=16
PASSED QUERY TEST: Expected A/B (999832/1000168) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999832/1000168 1:999832/1000168 2:999832/1000168 3:999832/1000168 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (90). Actual CHs: PEER0(90) PEER1(90) PEER2(90) PEER3(90) 

POST/Chaincode: INVOKEs (40) using peer 0
....
POST/Chaincode: INVOKEs (40) using peer 1
....
POST/Chaincode: INVOKEs (1) using peer 2

POST/Chaincode: INVOKEs (1) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after stopped caserver, loop=3/6  forced_delays_secs=24
PASSED QUERY TEST: Expected A/B (999750/1000250) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999750/1000250 1:999750/1000250 2:999750/1000250 3:999750/1000250 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (132). Actual CHs: PEER0(132) PEER1(132) PEER2(132) PEER3(132) 

POST/Chaincode: INVOKEs (40) using peer 0
....
POST/Chaincode: INVOKEs (40) using peer 1
....
POST/Chaincode: INVOKEs (1) using peer 2

POST/Chaincode: INVOKEs (1) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after stopped caserver, loop=4/6  forced_delays_secs=32
PASSED QUERY TEST: Expected A/B (999668/1000332) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999668/1000332 1:999668/1000332 2:999668/1000332 3:999668/1000332 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (174). Actual CHs: PEER0(174) PEER1(174) PEER2(174) PEER3(174) 

POST/Chaincode: INVOKEs (40) using peer 0
..POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.
POST/Chaincode: INVOKEs (40) using peer 1
..POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.
POST/Chaincode: INVOKEs (1) using peer 2

POST/Chaincode: INVOKEs (1) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after stopped caserver, loop=5/6  forced_delays_secs=40
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999586   1000414.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2           999608   1000392
Peer 3           999608   1000392
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (216). Actual CHs: PEER0(206) PEER1(206) PEER2(206) PEER3(206) 

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP RECHECK Tests Status
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999586   1000414.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2           999608   1000392
Peer 3           999608   1000392
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (216). Actual CHs: PEER0(206) PEER1(206) PEER2(206) PEER3(206) 

===FAILURE after stopped MemberServices, secs: 40

POST/Chaincode: INVOKEs (40) using peer 0
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.
POST/Chaincode: INVOKEs (40) using peer 1
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32002 message=Invocation failure data=Error when invoking chaincode: Failed loading TCerts from TCA
.
POST/Chaincode: INVOKEs (1) using peer 2

POST/Chaincode: INVOKEs (1) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after stopped caserver, loop=6/6  forced_delays_secs=48
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999504   1000496.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2           999606   1000394
Peer 3           999606   1000394
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (258). Actual CHs: PEER0(208) PEER1(208) PEER2(208) PEER3(208) 




RESTART MemberServices (caserver)!




POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP first query after restarted caserver
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Failed loading TCerts from TCA
FAILED QUERY TEST: peers do not agree!!!!!!!!!! (even though it is NOT required to match Expected A/B 999504/1000496.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2           999606   1000394
Peer 3           999606   1000394
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (258). Actual CHs: PEER0(208) PEER1(208) PEER2(208) PEER3(208) 

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP RECHECK Tests Status
PASSED QUERY TEST: Enough (4) peers agree for Consensus (required=3) with values A/B 999606/1000394. It is not required to match expected values A/B 999504/1000496. ACTUALs (node:A/B): 0:999606/1000394 1:999606/1000394 2:999606/1000394 3:999606/1000394 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (258). Actual CHs: PEER0(208) PEER1(208) PEER2(208) PEER3(208) 

===RECOVERY! after RestartMemberServices (does not include timeouts for failed invoke/queries) secs: 0

POST/Chaincode: INVOKEs total (320) divided among all 4 running peers
................................
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after restarted caserver, loop=1/6  forced_delays_secs=8
PASSED QUERY TEST: Enough (4) peers agree for Consensus (required=3) with values A/B 999286/1000714. It is not required to match expected values A/B 999184/1000816. ACTUALs (node:A/B): 0:999286/1000714 1:999286/1000714 2:999286/1000714 3:999286/1000714 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (418). Actual CHs: PEER0(368) PEER1(368) PEER2(368) PEER3(368) 

POST/Chaincode: INVOKEs total (320) divided among all 4 running peers
................................
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after restarted caserver, loop=2/6  forced_delays_secs=16
PASSED QUERY TEST: Enough (4) peers agree for Consensus (required=3) with values A/B 998966/1001034. It is not required to match expected values A/B 998864/1001136. ACTUALs (node:A/B): 0:998966/1001034 1:998966/1001034 2:998966/1001034 3:998966/1001034 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (578). Actual CHs: PEER0(528) PEER1(528) PEER2(528) PEER3(528) 

POST/Chaincode: INVOKEs total (320) divided among all 4 running peers
................................
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after restarted caserver, loop=3/6  forced_delays_secs=24
PASSED QUERY TEST: Enough (4) peers agree for Consensus (required=3) with values A/B 998646/1001354. It is not required to match expected values A/B 998544/1001456. ACTUALs (node:A/B): 0:998646/1001354 1:998646/1001354 2:998646/1001354 3:998646/1001354 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (738). Actual CHs: PEER0(688) PEER1(688) PEER2(688) PEER3(688) 

POST/Chaincode: INVOKEs total (320) divided among all 4 running peers
................................
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after restarted caserver, loop=4/6  forced_delays_secs=32
PASSED QUERY TEST: Enough (4) peers agree for Consensus (required=3) with values A/B 998326/1001674. It is not required to match expected values A/B 998224/1001776. ACTUALs (node:A/B): 0:998326/1001674 1:998326/1001674 2:998326/1001674 3:998326/1001674 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (898). Actual CHs: PEER0(848) PEER1(848) PEER2(848) PEER3(848) 

POST/Chaincode: INVOKEs total (320) divided among all 4 running peers
................................
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after restarted caserver, loop=5/6  forced_delays_secs=40
PASSED QUERY TEST: Enough (4) peers agree for Consensus (required=3) with values A/B 998006/1001994. It is not required to match expected values A/B 997904/1002096. ACTUALs (node:A/B): 0:998006/1001994 1:998006/1001994 2:998006/1001994 3:998006/1001994 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1058). Actual CHs: PEER0(1008) PEER1(1008) PEER2(1008) PEER3(1008) 

POST/Chaincode: INVOKEs total (320) divided among all 4 running peers
................................
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP monitor status after restarted caserver, loop=6/6  forced_delays_secs=48
PASSED QUERY TEST: Enough (4) peers agree for Consensus (required=3) with values A/B 997686/1002314. It is not required to match expected values A/B 997584/1002416. ACTUALs (node:A/B): 0:997686/1002314 1:997686/1002314 2:997686/1002314 3:997686/1002314 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1218). Actual CHs: PEER0(1168) PEER1(1168) PEER2(1168) PEER3(1168) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_113_StopAndStartMemberServices.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=false CH=false AllVP=true) [6m41.423857176s]  

-----------
----------- go run CAT_113_StopAndStartMemberServices.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:05:09 UTC 2016 -----------


----------- go run CAT_114_S1_IQ_R1_IQcatchup.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:05:09 UTC 2016 -----------
-----------

BEGIN  CAT_114_S1_IQ_R1_IQcatchup.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:05:10.911788897 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
0532e3627b170d1702d896a26a33b75d5acfce95dd081164b05b4449c8e9e738
--------> Starting hyperledger PEER0
2a45dff0e961d3734236e8e5f33dd703a82a2fbcdf92f428fecfb3e4e3bafd54
--------> Starting hyperledger PEER1 <-----------
1b0ae3ecba49e3125f38218747513a40557c07aca782cf6c4c8cad0fb25da160
--------> Starting hyperledger PEER2 <-----------
e59b8d6fd630aa5475865093e58e743ccef696debe1c1a6d959cb362564c1971
--------> Starting hyperledger PEER3 <-----------
56f094ff5c25d66cc65fe92807e56b55ae390e35e2b275679b8cff9d79e3be48
--------> Printing list of Docker Containers
CONTAINERS: 56f094ff5c25 e59b8d6fd630 1b0ae3ecba49 2a45dff0e961
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 2a45dff0e961   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 1b0ae3ecba49   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID e59b8d6fd630   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 56f094ff5c25   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (1000) divided among all 3 running peers
doInvoke() calling chaincode.InvokeOnPeer 334 times on peer PEER0
.........+.........+.........+...
Sleep up to 33 secs after sending 334 invokes
Increment current ChainHeightBlockCount (6): + newBlocks(167) + queuedBlocks(0)
doInvoke() calling chaincode.InvokeOnPeer 333 times on peer PEER2
.........+.........+.........+...
Sleep up to 33 secs after sending 333 invokes
Increment current ChainHeightBlockCount (173): + newBlocks(167) + queuedBlocks(0)
doInvoke() calling chaincode.InvokeOnPeer 333 times on peer PEER3
.........+.........+.........+...
Sleep up to 33 secs after sending 333 invokes
Increment current ChainHeightBlockCount (340): + newBlocks(167) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1, and 1000 Invokes
PASS on PEER0: QUERY RESULTS MATCH expected values: A=998996, B=1001004.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=998996, B=1001004.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=998996, B=1001004.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (998996/1001004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998996/1001004 2:998996/1001004 3:998996/1001004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (507). Actual CHs: PEER0(507) PEER2(507) PEER3(507) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (16) divided among all 4 running peers
doInvoke() calling chaincode.InvokeOnPeer 4 times on peer PEER0
Increment current ChainHeightBlockCount (507): + newBlocks(2) + queuedBlocks(0)
doInvoke() calling chaincode.InvokeOnPeer 4 times on peer PEER1
Increment current ChainHeightBlockCount (509): + newBlocks(2) + queuedBlocks(0)
doInvoke() calling chaincode.InvokeOnPeer 4 times on peer PEER2
Increment current ChainHeightBlockCount (511): + newBlocks(2) + queuedBlocks(0)
doInvoke() calling chaincode.InvokeOnPeer 4 times on peer PEER3
Increment current ChainHeightBlockCount (513): + newBlocks(2) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after RESTART PEER 1, and 16 more Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASS on PEER0: QUERY RESULTS MATCH expected values: A=998980, B=1001020.
FAIL on PEER1: QUERY RESULTS: EXPECTED/ACTUAL: A=998980/0, B=1001020/0. *****FAIL*****
PASS on PEER2: QUERY RESULTS MATCH expected values: A=998980, B=1001020.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=998980, B=1001020.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (998980/1001020) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998980/1001020 1:0/0 2:998980/1001020 3:998980/1001020 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (515). Actual CHs: PEER0(515) PEER1(6) PEER2(515) PEER3(515) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
doInvoke() calling chaincode.InvokeOnPeer 25 times on peer PEER0
..Increment current ChainHeightBlockCount (515): + newBlocks(13) + queuedBlocks(0)
doInvoke() calling chaincode.InvokeOnPeer 25 times on peer PEER1
..Increment current ChainHeightBlockCount (528): + newBlocks(13) + queuedBlocks(0)
doInvoke() calling chaincode.InvokeOnPeer 25 times on peer PEER2
..Increment current ChainHeightBlockCount (541): + newBlocks(13) + queuedBlocks(0)
doInvoke() calling chaincode.InvokeOnPeer 25 times on peer PEER3
..Increment current ChainHeightBlockCount (554): + newBlocks(13) + queuedBlocks(0)

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after enough invokes to ensure state transfer and restarted peer should catchup
PASS on PEER0: QUERY RESULTS MATCH expected values: A=998880, B=1001120.
PASS on PEER1: QUERY RESULTS MATCH expected values: A=998880, B=1001120.
PASS on PEER2: QUERY RESULTS MATCH expected values: A=998880, B=1001120.
PASS on PEER3: QUERY RESULTS MATCH expected values: A=998880, B=1001120.
 qtrans (total) =     0
 qtransPerPeerForCH[ 0] =     0
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     0
PASSED QUERY TEST: Expected A/B (998880/1001120) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998880/1001120 1:998880/1001120 2:998880/1001120 3:998880/1001120 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (567). Actual CHs: PEER0(567) PEER1(567) PEER2(567) PEER3(567) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_114_S1_IQ_R1_IQcatchup.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [4m49.707932399s]  

-----------
----------- go run CAT_114_S1_IQ_R1_IQcatchup.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:10:00 UTC 2016 -----------


----------- go run CAT_201_S2S1_IQDIQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:10:00 UTC 2016 -----------
-----------

BEGIN  CAT_201_S2S1_IQDIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:10:02.098079579 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
b85709b501c6c729b0472a0a06a3bf61bd9c8bdd272fdf50cc973f6fcafee270
--------> Starting hyperledger PEER0
5538a87d7fa7214dfa99a00e27eed01a710b1f09189f84750cec7173e70dc354
--------> Starting hyperledger PEER1 <-----------
a8f92b8edd94124485ae41bb42670d2344c4aba2d3c8df7e57228b009c10945b
--------> Starting hyperledger PEER2 <-----------
7f0c3e44ea6c9e2a1cf96f1f92405b66b9d52cb69bd72c2a6a9f71fa2ff3056e
--------> Starting hyperledger PEER3 <-----------
6845f57de941a402ffab1b9fbe453b14812464817bce2e10cbb494abb7726703
--------> Printing list of Docker Containers
CONTAINERS: 6845f57de941 7f0c3e44ea6c a8f92b8edd94 5538a87d7fa7
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 5538a87d7fa7   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID a8f92b8edd94   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 7f0c3e44ea6c   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 6845f57de941   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER2  PEER1
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) being sent to each running peer
doInvoke() calling chaincode.InvokeOnPeer 1 times on peer PEER0
doInvoke() calling chaincode.InvokeOnPeer 1 times on peer PEER3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2 and 1, and Invokes
SKIPPED QUERY VALIDATION on PEER0: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=999996/999996, B=1000004/1000004.
SKIPPED QUERY VALIDATION on PEER3: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=999996/999996, B=1000004/1000004.
 qtrans (total) =     2
 qtransPerPeerForCH[ 0] =     1
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     1
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999994/1000006). ACTUALs (node:A/B): 0:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user3"},"id":21}

Sleep 60 secs, after deployed, txId=e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13
setup_part3_verify, AFTER deploy,QueryAllHosts: A/B/chainheight values:  5000 5000 6

POST/Chaincode: INVOKEs (1) using peer 3
doInvoke() calling chaincode.InvokeOnPeer 1 times on peer PEER3

POST/Chaincode: INVOKEs (1) using peer 0
doInvoke() calling chaincode.InvokeOnPeer 1 times on peer PEER0

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Deploy and Invoke, without consensus
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
SKIPPED QUERY VALIDATION on PEER0: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=5003/0, B=4997/0.
SKIPPED QUERY VALIDATION on PEER3: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=5003/0, B=4997/0.
 qtrans (total) =     5
 qtransPerPeerForCH[ 0] =     3
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     2
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (4998/5002). ACTUALs (node:A/B): 0:0/0 3:0/0 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

PASSED CAT_201_S2S1_IQDIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [3m16.496903076s]  

restore_all(): restart peer PEER1
ERROR: Could not exec docker start 1
[]
-----------
----------- go run CAT_201_S2S1_IQDIQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:13:18 UTC 2016 -----------


----------- go run CAT_202_S2S1_IQredeployIQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:13:18 UTC 2016 -----------
-----------

BEGIN  CAT_202_S2S1_IQredeployIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:13:20.128246799 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
422af9a68731a46d0b48d2479fe74046f5ce46434b53f9373730ed9c0815dc3c
--------> Starting hyperledger PEER0
e8b5046d7b66cd7b0a7078e613cf964e6e2dd4fd55ddc2668ecabaa3630b6b17
--------> Starting hyperledger PEER1 <-----------
53d14152af56e10d4d375535e9b90911a970fbd1619dcb4b56a89f8478bcdc15
--------> Starting hyperledger PEER2 <-----------
4a1abbffecae0c3def93723aba65fc2efd8556092e6b964994e55e3161c3eb19
--------> Starting hyperledger PEER3 <-----------
c37b81f00b65d14cf19480ab2b98f54a154611a4ad5fc42d49a10a933aa29862
--------> Printing list of Docker Containers
CONTAINERS: c37b81f00b65 4a1abbffecae 53d14152af56 e8b5046d7b66
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID e8b5046d7b66   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 53d14152af56   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 4a1abbffecae   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID c37b81f00b65   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER2  PEER1
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) being sent to each running peer
doInvoke() calling chaincode.InvokeOnPeer 1 times on peer PEER0
doInvoke() calling chaincode.InvokeOnPeer 1 times on peer PEER3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2 and 1, and Invokes
SKIPPED QUERY VALIDATION on PEER0: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=999996/999996, B=1000004/1000004.
SKIPPED QUERY VALIDATION on PEER3: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=999996/999996, B=1000004/1000004.
 qtrans (total) =     2
 qtransPerPeerForCH[ 0] =     1
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     1
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999994/1000006). ACTUALs (node:A/B): 0:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

POST/Chaincode: DEPLOY chaincode on peer PEER0, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.3:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user0"},"id":21}

Sleep 60 secs, after deployed, txId=1a329570c72017201de383203d2f4e310eb7d5ace3d88f125e19a3305874a8704f4ae9f28a2ada3de244cb721d0b3397dbb358851cd183f1163b8e2fc10b6a48
setup_part3_verify, AFTER deploy,QueryAllHosts: A/B/chainheight values:  999994 1000006 6

POST/Chaincode: INVOKEs (1) using peer 3
doInvoke() calling chaincode.InvokeOnPeer 1 times on peer PEER3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Deploy and Invoke, without consensus
SKIPPED QUERY VALIDATION on PEER0: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=999997/999996, B=1000003/1000004.
SKIPPED QUERY VALIDATION on PEER3: not enough peer nodes running for consensus. EXPECTED/ACTUAL: A=999997/999996, B=1000003/1000004.
 qtrans (total) =     4
 qtransPerPeerForCH[ 0] =     3
 qtransPerPeerForCH[ 1] =     0
 qtransPerPeerForCH[ 2] =     0
 qtransPerPeerForCH[ 3] =     1
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999993/1000007). ACTUALs (node:A/B): 0:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

PASSED CAT_202_S2S1_IQredeployIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [3m15.928124082s]  

restore_all(): restart peer PEER1
ERROR: Could not exec docker start 1
[]
-----------
----------- go run CAT_202_S2S1_IQredeployIQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:16:36 UTC 2016 -----------


----------- go run CAT_203_S0S1_IQDI.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:16:36 UTC 2016 -----------
-----------

BEGIN  CAT_203_S0S1_IQDI.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:16:37.515693225 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
72cf71f36996a14c0ee8ecc9e0fb97608f70bfb73b108a3a718de3be84696e11
--------> Starting hyperledger PEER0
9385c0f4963e1d7100de4ae92a3459399b4339ba21c9c66b8d5475a9875d3e34
--------> Starting hyperledger PEER1 <-----------
22f3859f2610ac02483e43e724d9c7766f8afb13af41b22e7384baac57d87275
--------> Starting hyperledger PEER2 <-----------
a7eb3c4d83da661e0bfa80994d839705a7ba3a3ab5217b428863b57686db0926
--------> Starting hyperledger PEER3 <-----------
37e405a0477b0f716dec397e0181d818391cb9180961452670f85d30132e896d
--------> Printing list of Docker Containers
CONTAINERS: 37e405a0477b a7eb3c4d83da 22f3859f2610 9385c0f4963e
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 9385c0f4963e   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 22f3859f2610   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID a7eb3c4d83da   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 37e405a0477b   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0  PEER1
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 0 and 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999994/1000006). ACTUALs (node:A/B): 2:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER2(6) PEER3(6) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user3"},"id":21}


POST/Chaincode: INVOKEs (1) being sent to each running peer

PASSED CAT_203_S0S1_IQDI.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=true AllVP=true) [3m35.914903127s]  

ERROR: Could not exec docker start 0
[]
-----------
----------- go run CAT_203_S0S1_IQDI.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:20:13 UTC 2016 -----------


----------- go run CAT_204_S2_IQDQIQ_S1_IQDD.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:20:13 UTC 2016 -----------
-----------

BEGIN  CAT_204_S2_IQDQIQ_S1_IQDD.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:20:14.887016092 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
015d19f93b196e72a9ffef64b3a3500a700777df7725b945d3e961e6fe0d8425
--------> Starting hyperledger PEER0
1d37f2fc84336a21816a8d924d4e94559034716b9a581d6937ace649d45bfb2f
--------> Starting hyperledger PEER1 <-----------
8d8828398d6898670ed8766b8d30fa2537063fd8824beb3a2fd34f38f33d6579
--------> Starting hyperledger PEER2 <-----------
fb61ffe335ba746c87f1da0c349d3f203c13fc47fd3c5369159a6ae999fde802
--------> Starting hyperledger PEER3 <-----------
bc548af82e419c5e636d746914790e541ddc03a7deb1084f3654ffd993a4605a
--------> Printing list of Docker Containers
CONTAINERS: bc548af82e41 fb61ffe335ba 8d8828398d68 1d37f2fc8433
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 1d37f2fc8433   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 8d8828398d68   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID fb61ffe335ba   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID bc548af82e41   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
  type  GOLANG
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (200) divided among all 3 running peers
..................
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 2, and Invokes
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999796/1000204 1:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (106). Actual CHs: PEER0(106) PEER1(106) PEER3(106) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=2000 B=2000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","2000","b","2000"]},"secureContext":"test_user3"},"id":221}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (2000/2000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:2000/2000 1:2000/2000 3:2000/2000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (107). Actual CHs: PEER0(107) PEER1(107) PEER3(107) 

POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after more Invokes 
PASSED QUERY TEST: Expected A/B (1997/2003) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:1997/2003 1:1997/2003 3:1997/2003 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (110). Actual CHs: PEER0(110) PEER1(110) PEER3(110) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 2 running peers
..........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after also STOP PEER 1, and Invokes, but not enough peers for consensus are running.
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (1897/2103). ACTUALs (node:A/B): 0:1997/2003 3:1997/2003 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (110). Actual CHs: PEER0(110) PEER3(110) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=3000 B=3000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","3000","b","3000"]},"secureContext":"test_user3"},"id":341}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=4000 B=4000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","4000","b","4000"]},"secureContext":"test_user3"},"id":342}


PASSED CAT_204_S2_IQDQIQ_S1_IQDD.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [6m2.720265788s]  

ERROR: Could not exec docker start 1
[]
-----------
----------- go run CAT_204_S2_IQDQIQ_S1_IQDD.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:26:17 UTC 2016 -----------


----------- go run CAT_205_S0_IQDQIQ_S1_IQDD.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:26:17 UTC 2016 -----------
-----------

BEGIN  CAT_205_S0_IQDQIQ_S1_IQDD.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:26:19.093323277 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
bbb2d176224ff76d19b6d7ec2d21f5197fab383b4f43e169e9afdc520af2c422
--------> Starting hyperledger PEER0
310bbde819ffb345edb830a71980ed4871c3e0a877487232b8e3f61aa86bf971
--------> Starting hyperledger PEER1 <-----------
32213827c074c07457c60e45ecb3f826ddc0860b8c6e2a4fadee601c32770a4d
--------> Starting hyperledger PEER2 <-----------
0c4aeff9285f5e37e66d6063cda9e516c5d038125855a952415ed2ebb658cd52
--------> Starting hyperledger PEER3 <-----------
6718dbd96aeb57409ac91cc42b070e576b8e5ce06147d717ee5317b69775e574
--------> Printing list of Docker Containers
CONTAINERS: 6718dbd96aeb 0c4aeff9285f 32213827c074 310bbde819ff
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 310bbde819ff   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 32213827c074   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 0c4aeff9285f   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 6718dbd96aeb   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : concurrency
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0, and Invokes
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999896   1000104.
ACTUALs:
Peer 1           999996   1000004
Peer 2           999996   1000004
Peer 3           999996   1000004
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=2000 B=2000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","2000","b","2000"]},"secureContext":"test_user3"},"id":121}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 5, after REDEPLOY new values
PASSED QUERY TEST: Expected A/B (2000/2000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:2000/2000 2:2000/2000 3:2000/2000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER1(57) PEER2(57) PEER3(57) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after more Invokes 
PASSED QUERY TEST: Expected A/B (1900/2100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1900/2100 2:1900/2100 3:1900/2100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER1(107) PEER2(107) PEER3(107) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
PASSED QUERY TEST: Expected A/B (1800/2200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:1800/2200 2:1800/2200 3:1800/2200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER1(157) PEER2(157) PEER3(157) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 2 running peers
..........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, after also STOP PEER 1, and Invokes, but not enough peers for consensus are running.
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (1700/2300). ACTUALs (node:A/B): 2:1800/2200 3:1800/2200 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (160). Actual CHs: PEER2(157) PEER3(157) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=3000 B=3000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","3000","b","3000"]},"secureContext":"test_user3"},"id":444}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=4000 B=4000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","4000","b","4000"]},"secureContext":"test_user3"},"id":445}


PASSED CAT_205_S0_IQDQIQ_S1_IQDD.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [6m54.453246773s]  

After start peer, sleep 5 secs
ERROR: Could not exec docker start 1
[]
-----------
----------- go run CAT_205_S0_IQDQIQ_S1_IQDD.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:33:18 UTC 2016 -----------


----------- go run CAT_206_S1_IQ_S2_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:33:18 UTC 2016 -----------
-----------

BEGIN  CAT_206_S1_IQ_S2_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:33:20.087579761 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
fe926ca9b9b71f653504db9b36ad561c23aec076269c3c04777d17a92baadd70
--------> Starting hyperledger PEER0
edaf15c08983703a3d4f944e868ace03a728820c09c58037fd481d8a23a41148
--------> Starting hyperledger PEER1 <-----------
1bcfb69356fdb625da7a4fa036c8ba2d27bfea80532a8065498f538e00cc1b59
--------> Starting hyperledger PEER2 <-----------
828bb0a9bc10745c1ba6688280c99c3746f291a1ce0bf744cd58989ad71fdf0e
--------> Starting hyperledger PEER3 <-----------
dffd9fb35ee150622f2650bdd878994fc1b4168043f7a80fd299abd381d95778
--------> Printing list of Docker Containers
CONTAINERS: dffd9fb35ee1 828bb0a9bc10 1bcfb69356fd edaf15c08983
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID edaf15c08983   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 1bcfb69356fd   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 828bb0a9bc10   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID dffd9fb35ee1   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
  type  GOLANG
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999983/1000017) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999983/1000017 2:999983/1000017 3:999983/1000017 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart
>>>Sleep extra 60 secs

POST/Chaincode: INVOKEs total (200) divided among all 3 running peers
..................>>>Sleep extra 60 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999783/1000217) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999783/1000217 1:999783/1000217 3:999783/1000217 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(114) PEER1(114) PEER3(114) 

POST/Chaincode: INVOKEs total (500) divided among all 3 running peers
.........+...............+...............+......
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after more invokes
PASSED QUERY TEST: Expected A/B (999283/1000717) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999283/1000717 1:999283/1000717 3:999283/1000717 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (363). Actual CHs: PEER0(364) PEER1(364) PEER3(364) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_206_S1_IQ_S2_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [6m14.077171218s]  

ERROR: Could not exec docker start 2
[]
-----------
----------- go run CAT_206_S1_IQ_S2_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:39:34 UTC 2016 -----------


----------- go run CAT_207_S2_IQ_S1_IQ_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:39:34 UTC 2016 -----------
-----------

BEGIN  CAT_207_S2_IQ_S1_IQ_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:39:35.783268416 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
51a8c16e3896b307da932f103a5aff2ba24cad56606e1074cd448aa13bb35039
--------> Starting hyperledger PEER0
ddb5f2230c7cd66ba156e164c0761414d1ef8bfb7d38726e076039627af7bb45
--------> Starting hyperledger PEER1 <-----------
661e087bc2464e4c00cda43955faa1127a772973bdf1580bcf1f4e70f9b8d046
--------> Starting hyperledger PEER2 <-----------
d3790ee31e5d7e1ae7bf82f708492512abe5ff2358e30560258cc024cf8f1859
--------> Starting hyperledger PEER3 <-----------
8cf64da298a9ea482dcf31cadca94c7b5bad26d8e611151488f1f9e15ba76b01
--------> Printing list of Docker Containers
CONTAINERS: 8cf64da298a9 d3790ee31e5d 661e087bc246 ddb5f2230c7c
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID ddb5f2230c7c   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 661e087bc246   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID d3790ee31e5d   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 8cf64da298a9   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 2, and Invokes
PASSED QUERY TEST: Expected A/B (999985/1000015) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999985/1000015 1:999985/1000015 3:999985/1000015 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (12). Actual CHs: PEER0(12) PEER1(12) PEER3(12) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 2 running peers
..........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after also STOP PEER 1 and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999885/1000115). ACTUALs (node:A/B): 0:999985/1000015 3:999985/1000015 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (12). Actual CHs: PEER0(12) PEER3(12) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, after Invokes 
PASSED QUERY TEST: Expected A/B (999785/1000215) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999785/1000215 1:999785/1000215 3:999785/1000215 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(113) PEER1(113) PEER3(113) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_207_S2_IQ_S1_IQ_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [4m47.390927585s]  

ERROR: Could not exec docker start 2
[]
-----------
----------- go run CAT_207_S2_IQ_S1_IQ_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:44:23 UTC 2016 -----------


----------- go run CAT_208_S1_IQ_S0_R0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:44:23 UTC 2016 -----------
-----------

BEGIN  CAT_208_S1_IQ_S0_R0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:44:24.705317973 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
8ab8a4bb599c48520b763b4be5e9507f5d4c359f0ac7e5277795f4cd1c43c417
--------> Starting hyperledger PEER0
2c09b5cd6531b508cb3307a1fdc47f03517094980b7835795d769957966eea07
--------> Starting hyperledger PEER1 <-----------
ef16531876ee6337f88065312e50c179e55724f871549f594655f46c32bf6019
--------> Starting hyperledger PEER2 <-----------
ee51892cd4477e364cac7740964bf4421f1e3ddf101a967b0a1e60e23aafe25a
--------> Starting hyperledger PEER3 <-----------
a2938bbd6817cf777fbba351e9af9579e528dd0c9846bf650d52f542bbe8794a
--------> Printing list of Docker Containers
CONTAINERS: a2938bbd6817 ee51892cd447 ef16531876ee 2c09b5cd6531
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 2c09b5cd6531   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID ef16531876ee   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID ee51892cd447   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID a2938bbd6817   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
  type  GOLANG
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 1, and Invokes
PASSED QUERY TEST: Expected A/B (999983/1000017) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999983/1000017 2:999983/1000017 3:999983/1000017 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (13). Actual CHs: PEER0(13) PEER2(13) PEER3(13) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 60 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 7, after Restart PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999883/1000117) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999883/1000117 2:999883/1000117 3:999883/1000117 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (64). Actual CHs: PEER0(63) PEER2(63) PEER3(63) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_208_S1_IQ_S0_R0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [5m10.864965204s]  

ERROR: Could not exec docker start 1
[]
-----------
----------- go run CAT_208_S1_IQ_S0_R0_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:49:35 UTC 2016 -----------


----------- go run CAT_209_S0_IQ_S1_IQ_R0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:49:35 UTC 2016 -----------
-----------

BEGIN  CAT_209_S0_IQ_S1_IQ_R0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:49:37.080133172 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
cc0b2ac505082652cd25ea9e783cff414c02a8f0f29fca381b53990d5459c948
--------> Starting hyperledger PEER0
f580c8da6ae9997e6aba7d4710e47e16205deb8872fb833056fa71210e6b8342
--------> Starting hyperledger PEER1 <-----------
8cf1f25da71405442e0429b0ef32e4554bae417b2a51fe7d2592727eba03765b
--------> Starting hyperledger PEER2 <-----------
7c6625108923e96017f69dbf2b6dca45d5f372b62deeaa7704ab79ab4cfa1975
--------> Starting hyperledger PEER3 <-----------
c4f89b299fcbba52e56abcabaa6aec1767ecf9a74df9a1686a3d0690d7d75357
--------> Printing list of Docker Containers
CONTAINERS: c4f89b299fcb 7c6625108923 8cf1f25da714 f580c8da6ae9
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID f580c8da6ae9   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 8cf1f25da714   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 7c6625108923   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID c4f89b299fcb   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
  type  GOLANG
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary
Sleep extra 30 secs

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEER 0 and Invokes
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999896   1000104.
ACTUALs:
Peer 1           999996   1000004
Peer 2           999996   1000004
Peer 3           999996   1000004
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after also STOP PEER 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999884/1000116). ACTUALs (node:A/B): 2:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (57). Actual CHs: PEER2(6) PEER3(6) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, after Restart PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999784/1000216) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999784/1000216 2:999784/1000216 3:999784/1000216 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (108). Actual CHs: PEER0(113) PEER2(113) PEER3(113) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
PASSED QUERY TEST: Expected A/B (999684/1000316) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999684/1000316 2:999684/1000316 3:999684/1000316 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (159). Actual CHs: PEER0(163) PEER2(163) PEER3(163) 

PASSED CAT_209_S0_IQ_S1_IQ_R0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [5m55.592226625s]  

ERROR: Could not exec docker start 1
[]
-----------
----------- go run CAT_209_S0_IQ_S1_IQ_R0_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:55:32 UTC 2016 -----------


----------- go run CAT_210_S2S1_IQ_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:55:32 UTC 2016 -----------
-----------

BEGIN  CAT_210_S2S1_IQ_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:55:34.247682359 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
0c83eb539e5a0c51654ffef1b25ef834fa2ba5c50409bd1fd9fbb75d1ad8b708
--------> Starting hyperledger PEER0
32fb7d8b2be04d31704634702728c2043e82052d5a24412a0c3e2d04ea9c7659
--------> Starting hyperledger PEER1 <-----------
392208247da2eb0cf45b3f8f886f2d626729483ffb58cb53e11dfa816a86e477
--------> Starting hyperledger PEER2 <-----------
8c0de45b00f8216cf84967bd91c7563ebd0acfe2526df86095347e7d6b705c11
--------> Starting hyperledger PEER3 <-----------
42081796a7e9a35e649fe4250c20a924531e58845d0f4e071df3bf217cffb14d
--------> Printing list of Docker Containers
CONTAINERS: 42081796a7e9 8c0de45b00f8 392208247da2 32fb7d8b2be0
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 32fb7d8b2be0   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 392208247da2   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 8c0de45b00f8   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 42081796a7e9   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER2  PEER1
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2, 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999987/1000013). ACTUALs (node:A/B): 0:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........Sleep extra 30 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Restart PEER 1, and Invokes 
PASSED QUERY TEST: Expected A/B (999887/1000113) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999887/1000113 1:999887/1000113 3:999887/1000113 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (62). Actual CHs: PEER0(61) PEER1(61) PEER3(61) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_210_S2S1_IQ_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [3m33.528512119s]  

After start peer, sleep 5 secs
-----------
----------- go run CAT_210_S2S1_IQ_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 03:59:12 UTC 2016 -----------


----------- go run CAT_211_S2S1_IQ_R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 03:59:12 UTC 2016 -----------
-----------

BEGIN  CAT_211_S2S1_IQ_R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 03:59:14.237306713 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
a755dd02491fa11c51f72c86d3c0ca777dcea429b2f9041778e60c4eea5ec44f
--------> Starting hyperledger PEER0
a08833ab94287009a05da05ed9e7b34d29fe1aef6cdd9a48f285680aa5fed376
--------> Starting hyperledger PEER1 <-----------
0656a8975e23ee1ef9d752e516e19d3574a52404aff28b4d53790793289f1d78
--------> Starting hyperledger PEER2 <-----------
b93d0496e7533d7e56db08583f47600513f61f04cc8fa848a846efb5d0f59542
--------> Starting hyperledger PEER3 <-----------
fe5038aef73ec0296bb16759ecf7791db27edc0867d07666e561100a816a7217
--------> Printing list of Docker Containers
CONTAINERS: fe5038aef73e b93d0496e753 0656a8975e23 a08833ab9428
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID a08833ab9428   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 0656a8975e23   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID b93d0496e753   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID fe5038aef73e   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
  type  GOLANG
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER2  PEER1
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2, 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999987/1000013). ACTUALs (node:A/B): 0:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER0(6) PEER3(6) 

RESTART Peers():  PEER1  PEER2
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........Sleep extra 60 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Restarted all the stopped PEERS, and Invokes 
PASSED QUERY TEST: Expected A/B (999887/1000113) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999887/1000113 1:999887/1000113 2:999887/1000113 3:999887/1000113 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (63). Actual CHs: PEER0(63) PEER1(63) PEER2(63) PEER3(63) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after 1000 invokes
PASSED QUERY TEST: Expected A/B (998887/1001113) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998887/1001113 1:998887/1001113 2:998887/1001113 3:998887/1001113 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (563). Actual CHs: PEER0(563) PEER1(563) PEER2(563) PEER3(563) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_211_S2S1_IQ_R1R2_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [5m57.982884097s]  

-----------
----------- go run CAT_211_S2S1_IQ_R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 04:05:12 UTC 2016 -----------


----------- go run CAT_212_S0S1_IQ_R0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 04:05:12 UTC 2016 -----------
-----------

BEGIN  CAT_212_S0S1_IQ_R0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 04:05:13.704667748 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
8c06f26f62e8ee49e0a9125f46db824fce20474920db8e36381704127c918d41
--------> Starting hyperledger PEER0
507c6d1b32650e4cbf21e77e64bc473ecf72ba0ddf44331eae926a9e56de7a52
--------> Starting hyperledger PEER1 <-----------
46087f14f063bd3348f688ec0a9c96727424697189791329f637bff1df412622
--------> Starting hyperledger PEER2 <-----------
2f51e74223c33b0eadefc7bc6f212b76ba6eb4791234d2375261c139bad89b21
--------> Starting hyperledger PEER3 <-----------
e4bf34d1de0c823a1e8d2740e81e703b2d9cec31f6f1616c59ff3002ce372562
--------> Printing list of Docker Containers
CONTAINERS: e4bf34d1de0c 2f51e74223c3 46087f14f063 507c6d1b3265
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 507c6d1b3265   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 46087f14f063   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 2f51e74223c3   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID e4bf34d1de0c   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0  PEER1
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2, 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999984/1000016). ACTUALs (node:A/B): 2:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER2(6) PEER3(6) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Restart PEER 0, and Invokes 
PASSED QUERY TEST: Expected A/B (999884/1000116) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999884/1000116 2:999884/1000116 3:999884/1000116 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER0(62) PEER2(62) PEER3(62) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_212_S0S1_IQ_R0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [3m57.082797926s]  

ERROR: Could not exec docker start 1
[]
-----------
----------- go run CAT_212_S0S1_IQ_R0_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 04:09:10 UTC 2016 -----------


----------- go run CAT_213_S0S1_IQ_R0R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 04:09:10 UTC 2016 -----------
-----------

BEGIN  CAT_213_S0S1_IQ_R0R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 04:09:12.213296331 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
db1c37f8d15b7e7d90ab209e9583040d9da320d7d1edff4ba271d6a6934b2831
--------> Starting hyperledger PEER0
1affdc0b0b795c65727d52b61fa4fd192f457be2e1f8254df66021d4018aa55c
--------> Starting hyperledger PEER1 <-----------
61febb3c6b87e34649413b91b730f46f9a7a518f51c0ef1ed797488350a12950
--------> Starting hyperledger PEER2 <-----------
42619d2eb820f00a8156fc286a473610c8996b2603096d67a137d0125fb7a206
--------> Starting hyperledger PEER3 <-----------
6c810ecb45dba43d4c29a57047383f4355980c3b3dbdb362d7a7c3685f5e605e
--------> Printing list of Docker Containers
CONTAINERS: 6c810ecb45db 42619d2eb820 61febb3c6b87 1affdc0b0b79
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 1affdc0b0b79   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 61febb3c6b87   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 42619d2eb820   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 6c810ecb45db   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
  type  GOLANG
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

STOP Peers():  PEER0  PEER1
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after STOP PEERS 2, 1, and Invokes
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999984/1000016). ACTUALs (node:A/B): 2:999996/1000004 3:999996/1000004 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (6). Actual CHs: PEER2(6) PEER3(6) 

RESTART Peers():  PEER0  PEER1
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........Sleep extra 60 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after Restarted all the stopped PEERS, and Invokes 
PASSED QUERY TEST: Expected A/B (999884/1000116) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999884/1000116 1:999884/1000116 2:999884/1000116 3:999884/1000116 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER0(64) PEER1(64) PEER2(64) PEER3(64) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after 1000 invokes
PASSED QUERY TEST: Expected A/B (998884/1001116) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998884/1001116 1:998884/1001116 2:998884/1001116 3:998884/1001116 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (558). Actual CHs: PEER0(564) PEER1(564) PEER2(564) PEER3(564) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_213_S0S1_IQ_R0R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [6m50.170711873s]  

-----------
----------- go run CAT_213_S0S1_IQ_R0R1_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 04:16:02 UTC 2016 -----------


----------- go run CAT_301_S0S1S2_IQ_R0_IQ_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 04:16:02 UTC 2016 -----------
-----------

BEGIN  CAT_301_S0S1S2_IQ_R0_IQ_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 04:16:03.883545156 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
143e0ce49da85111624ef98b83b31655f12ee19c0b759377456a128fa5766c76
--------> Starting hyperledger PEER0
44cf763b17c03559ea40260b613f461e7dc19d5663e13236c1f76adaaef8b435
--------> Starting hyperledger PEER1 <-----------
21a3ad5b9859ff4337872d6d7361e5733aa582a1a74a6551ec7d5aa6fd705c1a
--------> Starting hyperledger PEER2 <-----------
35f9ad513e0eb92258da62f185cc41506bb6a16ed03254408038b44e049d576b
--------> Starting hyperledger PEER3 <-----------
99e8ac137d8f2a20a890d6eb583b92493d76677e05902c3eb382071414666b23
--------> Printing list of Docker Containers
CONTAINERS: 99e8ac137d8f 35f9ad513e0e 21a3ad5b9859 44cf763b17c0
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 44cf763b17c0   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 21a3ad5b9859   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 35f9ad513e0e   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 99e8ac137d8f   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0  PEER1  PEER2
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (50) divided among all 1 running peers
.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (including vp0), and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999850/1000150). ACTUALs (node:A/B): 3:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER3(54) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (including vp0), and restarted just peer 0, and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999841/1000159). ACTUALs (node:A/B): 0:999900/1000100 3:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 2 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER0(54) PEER3(54) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 9, after stopped 3 peers (including vp0), and restarted peer 1 (all running but vp2), and more Invokes 
PASSED QUERY TEST: Expected A/B (999741/1000259) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999741/1000259 1:999741/1000259 3:999741/1000259 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (135). Actual CHs: PEER0(135) PEER1(135) PEER3(135) 

POST/Chaincode: INVOKEs total (2100) divided among all 3 running peers
.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 12, after many more Invokes
PASSED QUERY TEST: Expected A/B (997641/1002359) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997641/1002359 1:997641/1002359 3:997641/1002359 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1185). Actual CHs: PEER0(1185) PEER1(1185) PEER3(1185) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_301_S0S1S2_IQ_R0_IQ_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [8m51.206977921s]  

After start peer, sleep 5 secs
-----------
----------- go run CAT_301_S0S1S2_IQ_R0_IQ_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 04:25:00 UTC 2016 -----------


----------- go run CAT_302_S0S1S2_IQ_R0R1_IQIQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 04:25:00 UTC 2016 -----------
-----------

BEGIN  CAT_302_S0S1S2_IQ_R0R1_IQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 04:25:01.568606464 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
cfbf30552bf4bb6998e8d6b4deccdf222242265a5ce53970b38a86ed6c1ca029
--------> Starting hyperledger PEER0
e13166410a250270c51c8234ae061c34ee094ab84574d74d4483204b5aa99727
--------> Starting hyperledger PEER1 <-----------
9dad2218961da50cde2c7a7dfcabc72a8ac986e187f8f1718621ed8d72debc0a
--------> Starting hyperledger PEER2 <-----------
a0fb4ceb45d86977cb57dba48b32027bdb4f9a358388570f63040f22b27b5215
--------> Starting hyperledger PEER3 <-----------
bb99a28d77a9bd2e2fa37a62109dd857500f0d1c76dc2b4b4891ce931578f219
--------> Printing list of Docker Containers
CONTAINERS: bb99a28d77a9 a0fb4ceb45d8 9dad2218961d e13166410a25
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID e13166410a25   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 9dad2218961d   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID a0fb4ceb45d8   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID bb99a28d77a9   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0  PEER1  PEER2
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (50) divided among all 1 running peers
.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (including vp0), and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999850/1000150). ACTUALs (node:A/B): 3:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER3(54) 

RESTART Peers():  PEER0  PEER1
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (including vp0), and restarted peers 0 & 1 (but not 2), and more Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999839   1000161.
ACTUALs:
Peer 0           999889   1000111
Peer 1           999889   1000111
Peer 3           999889   1000111
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (85). Actual CHs: PEER0(60) PEER1(60) PEER3(60) 

POST/Chaincode: INVOKEs total (2100) divided among all 3 running peers
.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many invokes
PASSED QUERY TEST: Expected A/B (997739/1002261) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997739/1002261 1:997739/1002261 3:997739/1002261 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1135). Actual CHs: PEER0(1135) PEER1(1135) PEER3(1135) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
PASSED QUERY TEST: Expected A/B (997639/1002361) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997639/1002361 1:997639/1002361 3:997639/1002361 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1186). Actual CHs: PEER0(1186) PEER1(1186) PEER3(1186) 

PASSED CAT_302_S0S1S2_IQ_R0R1_IQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [9m21.760203258s]  

After start peer, sleep 5 secs
-----------
----------- go run CAT_302_S0S1S2_IQ_R0R1_IQIQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 04:34:28 UTC 2016 -----------


----------- go run CAT_303_S0S1S2_IQ_R0R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 04:34:28 UTC 2016 -----------
-----------

BEGIN  CAT_303_S0S1S2_IQ_R0R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 04:34:29.787604345 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
7b6810d9b1c0e668f489a82aa15e3e5035c2ef321183456c39dbffb14cf70641
--------> Starting hyperledger PEER0
838d87ae391b7b18474e760eb09d286260acf04137988d78f3250f83243cdf51
--------> Starting hyperledger PEER1 <-----------
3991962fbfd522274bb75e7cc0a3b57de1097ab38ce4a148b1a1906bc046fa27
--------> Starting hyperledger PEER2 <-----------
965beea3ede66517e4bd0fc83805cd6edd5aadf109cf383ef95381b574a8bb23
--------> Starting hyperledger PEER3 <-----------
4a4c652b571aab4791b89816a20c446ba2ccd9674b32da0f843cf9d5fddc4722
--------> Printing list of Docker Containers
CONTAINERS: 4a4c652b571a 965beea3ede6 3991962fbfd5 838d87ae391b
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 838d87ae391b   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 3991962fbfd5   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 965beea3ede6   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 4a4c652b571a   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
  type  GOLANG
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0  PEER1  PEER2
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (50) divided among all 1 running peers
.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (including vp0), and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999850/1000150). ACTUALs (node:A/B): 3:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER3(54) 

RESTART Peers():  PEER0  PEER1  PEER2
After start peer, sleep 5 secs
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after restarted all 3 peers, and more Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999750   1000250.
ACTUALs:
Peer 0           999800   1000200
Peer 1           999800   1000200
Peer 2           999800   1000200
Peer 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (131). Actual CHs: PEER0(106) PEER1(106) PEER2(106) PEER3(54) 

POST/Chaincode: INVOKEs total (3100) divided among all 4 running peers
.........+.........+.........+.........+.........+.........+.........+................+.........+.........+.........+.........+.........+.........+................+.........+.........+.........+.........+.........+.........+................+.........+.........+.........+.........+.........+.........+.......
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many more invokes
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996650   1003350.
ACTUALs:
Peer 0           996700   1003300
Peer 1           996700   1003300
Peer 2           996700   1003300
Peer 3           996793   1003207
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1683). Actual CHs: PEER0(1658) PEER1(1658) PEER2(1658) PEER3(1611) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996550   1003450.
ACTUALs:
Peer 0           996600   1003400
Peer 1           996600   1003400
Peer 2           996600   1003400
Peer 3           996675   1003325
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1735). Actual CHs: PEER0(1710) PEER1(1710) PEER2(1710) PEER3(1671) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996550   1003450.
ACTUALs:
Peer 0           996600   1003400
Peer 1           996600   1003400
Peer 2           996600   1003400
Peer 3           996675   1003325
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1735). Actual CHs: PEER0(1710) PEER1(1710) PEER2(1710) PEER3(1671) 

FAILED CAT_303_S0S1S2_IQ_R0R1R2_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [16m59.44600154s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_303_S0S1S2_IQ_R0R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 04:51:29 UTC 2016 -----------


----------- go run CAT_304_S1S2S3_IQ_R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 04:51:29 UTC 2016 -----------
-----------

BEGIN  CAT_304_S1S2S3_IQ_R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 04:51:30.731427535 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
f19a91afa8922b7318ac94432dd72524dd1be757aadb866eecfc4d2632783f0d
--------> Starting hyperledger PEER0
b7eb4c57a152596dc3f278fee5288c21f14d1047af07cf6dc3e06c9dc3d6250b
--------> Starting hyperledger PEER1 <-----------
70e7e89a8185a66328b87cb68d95001c0ce8c7bad7d35e648f63422b630e6f4f
--------> Starting hyperledger PEER2 <-----------
50879298892f9d2d8fa572528e4e944b19b18dc8371d0c53214a1a268c76656b
--------> Starting hyperledger PEER3 <-----------
ad729da1b27033322dd7ec743df272686130a71a42d7ab6361742320609b583b
--------> Printing list of Docker Containers
CONTAINERS: ad729da1b270 50879298892f 70e7e89a8185 b7eb4c57a152
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID b7eb4c57a152   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 70e7e89a8185   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 50879298892f   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID ad729da1b270   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER1  PEER2  PEER3
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs (50) using peer 1

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (not vp0), and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999900/1000100). ACTUALs (node:A/B): 0:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER0(54) 

RESTART Peers():  PEER1  PEER2
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (not vp0), and restarted peers 1 & 2, and more Invokes 
PASSED QUERY TEST: Expected A/B (999893/1000107) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999893/1000107 1:999893/1000107 2:999893/1000107 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER0(58) PEER1(58) PEER2(58) 

POST/Chaincode: INVOKEs total (2100) divided among all 3 running peers
.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+.........+
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many more invokes
PASSED QUERY TEST: Expected A/B (997793/1002207) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997793/1002207 1:997793/1002207 2:997793/1002207 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1108). Actual CHs: PEER0(1108) PEER1(1108) PEER2(1108) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_304_S1S2S3_IQ_R1R2_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [7m58.523384342s]  

ERROR: Could not exec docker start 3
[]
-----------
----------- go run CAT_304_S1S2S3_IQ_R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 04:59:29 UTC 2016 -----------


----------- go run CAT_305_S1S2S3_IQ_R1R2R3_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 04:59:29 UTC 2016 -----------
-----------

BEGIN  CAT_305_S1S2S3_IQ_R1R2R3_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 04:59:30.728249702 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
223ff1e1e307c031b82fbe9bda5a201f898d09c23e7dc1073aab8fb3839bcb32
--------> Starting hyperledger PEER0
011a4ada4801b765454f557c179c5765a74362ab233dbc3d5aa29e9a3602c250
--------> Starting hyperledger PEER1 <-----------
4d50bcfe344677026dd9e70ff8a709799ad5bb4db5eee11441872c8631e2d37b
--------> Starting hyperledger PEER2 <-----------
1670e0fc70efb0172c2755e22b62f9087e063a21b9dbd74a768f5654de519864
--------> Starting hyperledger PEER3 <-----------
28021f0b856b7312cc219237ec05e87eb955c810bbfc9d18037399689ec0f438
--------> Printing list of Docker Containers
CONTAINERS: 28021f0b856b 1670e0fc70ef 4d50bcfe3446 011a4ada4801
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 011a4ada4801   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 4d50bcfe3446   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 1670e0fc70ef   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 28021f0b856b   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER1  PEER2  PEER3
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (50) divided among all 1 running peers
.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, after stopped 3 peers (not vp0), and more Invokes 
SKIPPED QUERY VALIDATION: not enough peer nodes running for consensus. Expected A/B (999850/1000150). ACTUALs (node:A/B): 0:999900/1000100 
SKIPPED CHAINHEIGHT VALIDATION: Only 1 peer nodes running, but 3 are required for consensus in this network of 4. Expected CH (54). Actual CHs: PEER0(54) 

RESTART Peers():  PEER1  PEER2  PEER3
After start peer, sleep 5 secs
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after restarted all peers 1, 2, 3, and more Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999750   1000250.
ACTUALs:
Peer 0           999800   1000200
Peer 1           999800   1000200
Peer 2           999800   1000200
Peer 3           999800   1000200
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (131). Actual CHs: PEER0(105) PEER1(105) PEER2(105) PEER3(105) 

POST/Chaincode: INVOKEs total (3100) divided among all 4 running peers
.........+.........+.........+.........+.........+.........+.........+................+.........+.........+.........+.........+.........+.........+................+.........+.........+.........+.........+.........+.........+................+.........+.........+.........+.........+.........+.........+.......
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many more invokes
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996650   1003350.
ACTUALs:
Peer 0           996771   1003229
Peer 1           996700   1003300
Peer 2           996700   1003300
Peer 3           996700   1003300
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1683). Actual CHs: PEER0(1621) PEER1(1657) PEER2(1657) PEER3(1657) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996550   1003450.
ACTUALs:
Peer 0           996653   1003347
Peer 1           996600   1003400
Peer 2           996600   1003400
Peer 3           996600   1003400
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1735). Actual CHs: PEER0(1681) PEER1(1709) PEER2(1709) PEER3(1709) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    996550   1003450.
ACTUALs:
Peer 0           996653   1003347
Peer 1           996600   1003400
Peer 2           996600   1003400
Peer 3           996600   1003400
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1735). Actual CHs: PEER0(1681) PEER1(1709) PEER2(1709) PEER3(1709) 

FAILED CAT_305_S1S2S3_IQ_R1R2R3_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [16m6.429596947s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_305_S1S2S3_IQ_R1R2R3_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 05:15:37 UTC 2016 -----------


----------- go run CAT_306_S0S1S2S3_R0R1R2_IQ_R3_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 05:15:37 UTC 2016 -----------
-----------

BEGIN  CAT_306_S0S1S2S3_R0R1R2_IQ_R3_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 05:15:38.615535825 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
bc85a0fa084ce321eaf4d493754d2a3d7d4f33817861626294eb281d25d36256
--------> Starting hyperledger PEER0
84025744a43229019cceea5f26b55879247aaeae9f87ae0703b52d0e6b6e6c60
--------> Starting hyperledger PEER1 <-----------
b87e654d0d58cc520c8226dc2d16603af6845fbbc9eda939f4405fba47687332
--------> Starting hyperledger PEER2 <-----------
1f1b9b31c54b27157c0281a598787c3aece4614f23dea61ffe031685bee4775c
--------> Starting hyperledger PEER3 <-----------
7c6cd88137cec97078a469c991ca3521218d8a9884cd2f594aabfdd91f3eab1f
--------> Printing list of Docker Containers
CONTAINERS: 7c6cd88137ce 1f1b9b31c54b b87e654d0d58 84025744a432
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 84025744a432   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID b87e654d0d58   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 1f1b9b31c54b   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 7c6cd88137ce   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
  type  GOLANG
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0  PEER1  PEER2  PEER3
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

RESTART Peers():  PEER0  PEER1  PEER2
After start peer, sleep 5 secs
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary
Sleep extra 60 secs

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after stopped all 4 peers and restarted 3 peers, and a few Invokes 
PASSED QUERY TEST: Expected A/B (999893/1000107) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999893/1000107 1:999893/1000107 2:999893/1000107 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (58). Actual CHs: PEER0(58) PEER1(58) PEER2(58) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........Sleep extra 60 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after restarted 4th peers, and Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
PASSED QUERY TEST: Expected A/B (999793/1000207) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999793/1000207 1:999793/1000207 2:999793/1000207 3:0/0 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (110). Actual CHs: PEER0(110) PEER1(110) PEER2(110) PEER3(54) 

POST/Chaincode: INVOKEs total (2100) divided among all 4 running peers
.........+.........+.........+.........+.........+...........+.........+.........+.........+.........+...........+.........+.........+.........+.........+...........+.........+.........+.........+.........+..
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after many more invokes
PASSED QUERY TEST: Expected A/B (997693/1002307) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997693/1002307 1:997693/1002307 2:997693/1002307 3:997693/1002307 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1162). Actual CHs: PEER0(1162) PEER1(1162) PEER2(1162) PEER3(1162) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_306_S0S1S2S3_R0R1R2_IQ_R3_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [10m49.313426632s]  

-----------
----------- go run CAT_306_S0S1S2S3_R0R1R2_IQ_R3_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 05:26:27 UTC 2016 -----------


----------- go run CAT_307_S0S1S2S3_R0R1R2R3_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 05:26:27 UTC 2016 -----------
-----------

BEGIN  CAT_307_S0S1S2S3_R0R1R2R3_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 05:26:29.47291092 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
62963736511bf33ab0c7870569713f0ddc16cd1f472a325968aa4c173bcfa754
--------> Starting hyperledger PEER0
bc9c31d01a26f31dabe9f18a479d3f61024f9bdd22499434cd94241f640d5436
--------> Starting hyperledger PEER1 <-----------
f4e331dbdb351f2f7fdb462c79b2b75d2bb693e533a3dc220db1640f7c830238
--------> Starting hyperledger PEER2 <-----------
1a22e5a642ff743b63fa12f436c8b64d515675ab182eda2e699275e00b3a296d
--------> Starting hyperledger PEER3 <-----------
1b085205177f781675357925f0b59901da7878eda76a0e16a06a5495868d4943
--------> Printing list of Docker Containers
CONTAINERS: 1b085205177f 1a22e5a642ff f4e331dbdb35 bc9c31d01a26
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID bc9c31d01a26   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID f4e331dbdb35   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 1a22e5a642ff   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 1b085205177f   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes, totaling 100
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0  PEER1  PEER2  PEER3
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

RESTART Peers():  PEER0  PEER1  PEER2  PEER3
After start peer, sleep 5 secs
After start peer, sleep 5 secs
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary
Sleep extra 60 secs

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after stopped and restarted all 4 peers, and a few Invokes 
PASSED QUERY TEST: Expected A/B (999885/1000115) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999885/1000115 1:999885/1000115 2:999885/1000115 3:999885/1000115 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (62). Actual CHs: PEER0(62) PEER1(62) PEER2(62) PEER3(62) 
Sleep extra 60 secs

POST/Chaincode: INVOKEs total (2100) divided among all 4 running peers
.........+.........+.........+.........+.........+...........+.........+.........+.........+.........+...........+.........+.........+.........+.........+...........+.........+.........+.........+.........+..
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after many more invokes
PASSED QUERY TEST: Expected A/B (997785/1002215) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:997785/1002215 1:997785/1002215 2:997785/1002215 3:997785/1002215 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (1114). Actual CHs: PEER0(1114) PEER1(1114) PEER2(1114) PEER3(1114) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_307_S0S1S2S3_R0R1R2R3_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [10m5.534888862s]  

-----------
----------- go run CAT_307_S0S1S2S3_R0R1R2R3_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 05:36:35 UTC 2016 -----------


----------- go run CAT_401_DQIQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 05:36:35 UTC 2016 -----------
-----------

BEGIN  CAT_401_DQIQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 05:36:36.51434796 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
e580bc0e5098d2062604ab3bef761d6902d1628a763f1e1d4d6cbe7339bd1950
--------> Starting hyperledger PEER0
110139484b03d91767281c01db58580b8de9de0ff537961339e440a98d848d09
--------> Starting hyperledger PEER1 <-----------
273aa67e1a62e34f0e31f4dc1841eb111bf90f1b6bceeb1ffc5b6d6f4b932d63
--------> Starting hyperledger PEER2 <-----------
894626a7c2d85b07af9e7b260aaa6b145d702ffe187b4d13a4e5ecabf2a65d48
--------> Starting hyperledger PEER3 <-----------
b13156eba3b17f39ce27ba04b055a31bc00597452ac37256e1c7b61c0c0eb32b
--------> Printing list of Docker Containers
CONTAINERS: b13156eba3b1 894626a7c2d8 273aa67e1a62 110139484b03
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 110139484b03   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 273aa67e1a62   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 894626a7c2d8   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID b13156eba3b1   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

POST/Chaincode: NEW DEPLOY, on peer PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":119}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 2, after REDEPLOY with original A & B init values
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (55). Actual CHs: PEER0(55) PEER1(55) PEER2(55) PEER3(55) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after more Invokes 
PASSED QUERY TEST: Expected A/B (999800/1000200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999800/1000200 1:999800/1000200 2:999800/1000200 3:999800/1000200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (107). Actual CHs: PEER0(107) PEER1(107) PEER2(107) PEER3(107) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user3"},"id":236}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after REDEPLOY using new values
PASSED QUERY TEST: Expected A/B (5000/5000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:5000/5000 1:5000/5000 2:5000/5000 3:5000/5000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (108). Actual CHs: PEER0(108) PEER1(108) PEER2(108) PEER3(108) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after more Invokes 
PASSED QUERY TEST: Expected A/B (4900/5100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4900/5100 1:4900/5100 2:4900/5100 3:4900/5100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER0(160) PEER1(160) PEER2(160) PEER3(160) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_401_DQIQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [4m57.698941591s]  

-----------
----------- go run CAT_401_DQIQDQIQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 05:41:34 UTC 2016 -----------


----------- go run CAT_402_S1_DQIQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 05:41:34 UTC 2016 -----------
-----------

BEGIN  CAT_402_S1_DQIQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 05:41:35.668622841 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
953d2efd47be5a4ed56e72a7e0cb503e32506615e6ac3259476fb7c59923fc3c
--------> Starting hyperledger PEER0
a48d87f0fcaba00d7121fbb0861fdd3a10b411ccde46ae70a4bbef2782ca1b2e
--------> Starting hyperledger PEER1 <-----------
f1a2a40b7f13504fd4230bd0c8b1585adbba15e266276be4197ad3dab4b64031
--------> Starting hyperledger PEER2 <-----------
1cc6552de56397316f549696a0fd8449439f217d405e2b1f8eb1b756a23dae6c
--------> Starting hyperledger PEER3 <-----------
4285989a3d7332018403df344ada9425a0ce6f2ef71593518817e83bfe1ad01e
--------> Printing list of Docker Containers
CONTAINERS: 4285989a3d73 1cc6552de563 f1a2a40b7f13 a48d87f0fcab
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID a48d87f0fcab   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID f1a2a40b7f13   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 1cc6552de563   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 4285989a3d73   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
  type  GOLANG
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: NEW DEPLOY, on peer PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":119}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 2, after STOP PEER 1, and REDEPLOY with original A & B init values
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (55). Actual CHs: PEER0(55) PEER2(55) PEER3(55) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after more Invokes 
PASSED QUERY TEST: Expected A/B (999800/1000200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999800/1000200 2:999800/1000200 3:999800/1000200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (106). Actual CHs: PEER0(105) PEER2(105) PEER3(105) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user3"},"id":232}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after REDEPLOY using new values
PASSED QUERY TEST: Expected A/B (5000/5000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:5000/5000 2:5000/5000 3:5000/5000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (107). Actual CHs: PEER0(106) PEER2(106) PEER3(106) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after more Invokes 
PASSED QUERY TEST: Expected A/B (4900/5100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4900/5100 2:4900/5100 3:4900/5100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (158). Actual CHs: PEER0(156) PEER2(156) PEER3(156) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_402_S1_DQIQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [4m53.550551503s]  

ERROR: Could not exec docker start 1
[]
-----------
----------- go run CAT_402_S1_DQIQDQIQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 05:46:29 UTC 2016 -----------


----------- go run CAT_403_S0_IQ_DQIQDQIQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 05:46:29 UTC 2016 -----------
-----------

BEGIN  CAT_403_S0_IQ_DQIQDQIQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 05:46:30.661900724 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
ecd33def4b5cf5051ed417aa0701cf446dc41a623e5355334af8cb3668309652
--------> Starting hyperledger PEER0
73c524780be071617ede75b4645c137d3ed2c04992c1cd5d5ae31e695423e30d
--------> Starting hyperledger PEER1 <-----------
3e139a5e65d46132504df3d2cb8e2c196ecb44f35c9afc57cd55d5e1df162130
--------> Starting hyperledger PEER2 <-----------
7fe1f99d275d986d8c645fef9900487e594a7cf1d2628719602269d515430666
--------> Starting hyperledger PEER3 <-----------
c3e5527298f03b2ce64c291d5d53076ff56350aa6fd1eb20f29296ccc3450102
--------> Printing list of Docker Containers
CONTAINERS: c3e5527298f0 7fe1f99d275d 3e139a5e65d4 73c524780be0
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 73c524780be0   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 3e139a5e65d4   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 7fe1f99d275d   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID c3e5527298f0   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after more Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:    999800   1000200.
ACTUALs:
Peer 1           999900   1000100
Peer 2           999900   1000100
Peer 3           999900   1000100
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (105). Actual CHs: PEER1(54) PEER2(54) PEER3(54) 

POST/Chaincode: NEW DEPLOY, on peer PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":225}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 2, after STOP PEER 0, and REDEPLOY with original A & B init values
PASSED QUERY TEST: Expected A/B (999800/1000200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999800/1000200 2:999800/1000200 3:999800/1000200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (106). Actual CHs: PEER1(105) PEER2(105) PEER3(105) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 4, after more Invokes 
PASSED QUERY TEST: Expected A/B (999700/1000300) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999700/1000300 2:999700/1000300 3:999700/1000300 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (157). Actual CHs: PEER1(155) PEER2(155) PEER3(155) 

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user3"},"id":338}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after REDEPLOY using new values
PASSED QUERY TEST: Expected A/B (5000/5000) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:5000/5000 2:5000/5000 3:5000/5000 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (158). Actual CHs: PEER1(156) PEER2(156) PEER3(156) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, after more Invokes 
PASSED QUERY TEST: Expected A/B (4900/5100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:4900/5100 2:4900/5100 3:4900/5100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (209). Actual CHs: PEER1(206) PEER2(206) PEER3(206) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
PASSED QUERY TEST: Expected A/B (4800/5200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:4800/5200 2:4800/5200 3:4800/5200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (260). Actual CHs: PEER1(257) PEER2(257) PEER3(257) 

PASSED CAT_403_S0_IQ_DQIQDQIQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [5m41.688697267s]  

ERROR: Could not exec docker start 0
[]
-----------
----------- go run CAT_403_S0_IQ_DQIQDQIQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 05:52:12 UTC 2016 -----------


----------- go run CAT_404_S1S2_D_I_R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 05:52:12 UTC 2016 -----------
-----------

BEGIN  CAT_404_S1S2_D_I_R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 05:52:13.842162422 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
7d45d0af5e4b830521c881d9fb46544bc146a8beebb29c37899904b6ca01d27a
--------> Starting hyperledger PEER0
0f83b8450c2d2a70311e5da25c16734fc22126590fd06248322c03d543c5e62c
--------> Starting hyperledger PEER1 <-----------
a4bea50cc91876750492dded293feb40a457656ec8ed5e0b07b950346f2bc642
--------> Starting hyperledger PEER2 <-----------
0bbdf5c1ea662854c2d130d098f254744dc34f0629013a71263d1dfb4c029d22
--------> Starting hyperledger PEER3 <-----------
c5b49ac7ccd38c036cf0b70df0f7086a487198bbb6d12107710f2bc40d77da2b
--------> Printing list of Docker Containers
CONTAINERS: c5b49ac7ccd3 0bbdf5c1ea66 a4bea50cc918 0f83b8450c2d
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 0f83b8450c2d   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID a4bea50cc918   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 0bbdf5c1ea66   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID c5b49ac7ccd3   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER1  PEER2
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user3"},"id":119}


POST/Chaincode: INVOKEs total (100) divided among all 2 running peers
..........
RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 2 peers, deploy, and restarted 1 peer and more Invokes 
PASSED QUERY TEST: Expected A/B (4800/5200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4800/5200 1:4800/5200 3:4800/5200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (156). Actual CHs: PEER0(156) PEER1(156) PEER3(156) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_404_S1S2_D_I_R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [6m17.893573302s]  

ERROR: Could not exec docker start 2
[]
-----------
----------- go run CAT_404_S1S2_D_I_R1_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 05:58:31 UTC 2016 -----------


----------- go run CAT_405_S0S1_D_I_R0_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 05:58:31 UTC 2016 -----------
-----------

BEGIN  CAT_405_S0S1_D_I_R0_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 05:58:33.214779848 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
35df9f996ba2c243e8fadf6d7846de7585f8bb9b08964470e4d56446159f2712
--------> Starting hyperledger PEER0
bf610284224d773b83c6aad4d4c9107519ee91e864c28a614c739d6a178d4f37
--------> Starting hyperledger PEER1 <-----------
71b7f4a3d5727375f88e5dfce6bbfb46e0e43db04d25450c07dd03d7ae54ad7c
--------> Starting hyperledger PEER2 <-----------
54138fd2fb87651dcf81eaa6bf8c354647e35896222d9f3e16f1964e2da6e461
--------> Starting hyperledger PEER3 <-----------
1b3ba11a7dc60e7604b4d09de3b84631fe5a597d54820a6bde48579c1faba92f
--------> Printing list of Docker Containers
CONTAINERS: 1b3ba11a7dc6 54138fd2fb87 71b7f4a3d572 bf610284224d
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID bf610284224d   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 71b7f4a3d572   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 54138fd2fb87   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 1b3ba11a7dc6   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0  PEER1
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user3"},"id":119}


POST/Chaincode: INVOKEs total (100) divided among all 2 running peers
..........
RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 2 peers (0 &1), deploy, and restarted 1 peer (0) and more Invokes 
PASSED QUERY TEST: Expected A/B (4800/5200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4800/5200 2:4800/5200 3:4800/5200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (156). Actual CHs: PEER0(156) PEER2(156) PEER3(156) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_405_S0S1_D_I_R0_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [6m8.035305562s]  

After start peer, sleep 5 secs
-----------
----------- go run CAT_405_S0S1_D_I_R0_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 06:04:46 UTC 2016 -----------


----------- go run CAT_406_S0S1_D_I_R0R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 06:04:46 UTC 2016 -----------
-----------

BEGIN  CAT_406_S0S1_D_I_R0R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 06:04:47.814277507 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
ee890026c12cb13dd6780469c91128422d446d73d637e60c047ff77787327d5b
--------> Starting hyperledger PEER0
ce7774cf73bf2d2509d9eb8fe8a82f52d4b3e0ca3d30a442b55f8116150ef627
--------> Starting hyperledger PEER1 <-----------
e4254c969fb4ea3d67203717012b003f15efc690dbaf860891babe91f4d1b121
--------> Starting hyperledger PEER2 <-----------
69cbf5f3c352ee0c50cd2662b7f0ea3cc182b8f944a4c741017e0109f9625165
--------> Starting hyperledger PEER3 <-----------
d2a9a97b5e629409644b4fde2053290cd9a20787139c135137576abb60c9e00b
--------> Printing list of Docker Containers
CONTAINERS: d2a9a97b5e62 69cbf5f3c352 e4254c969fb4 ce7774cf73bf
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID ce7774cf73bf   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID e4254c969fb4   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 69cbf5f3c352   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID d2a9a97b5e62   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
  type  GOLANG
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0  PEER1
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user3"},"id":119}


POST/Chaincode: INVOKEs total (100) divided among all 2 running peers
..........
RESTART Peers():  PEER0  PEER1
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary
Sleep extra 60 secs to ensure recovery

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........Sleep extra 60 secs to ensure recovery

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 2 peers (0 & 1), deploy, and restarted all peers, and more Invokes 
PASSED QUERY TEST: Expected A/B (4800/5200) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:4800/5200 1:4888/5112 2:4800/5200 3:4800/5200 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (157). Actual CHs: PEER0(157) PEER1(111) PEER2(157) PEER3(157) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_406_S0S1_D_I_R0R1_IQ.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [7m52.822372621s]  

-----------
----------- go run CAT_406_S0S1_D_I_R0R1_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 06:12:40 UTC 2016 -----------


----------- go run CAT_407_S0S1S2_D_I_R0R1_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 06:12:40 UTC 2016 -----------
-----------

BEGIN  CAT_407_S0S1S2_D_I_R0R1_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 06:12:42.058870271 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
a5e06fa3280e8c171e4516d407212a7fa52b77fede09ff36c927d2eeef655d1b
--------> Starting hyperledger PEER0
5a0342d3e19c092702f598383872d40b36b3b5aa3c0db338e11f3b622f732c4c
--------> Starting hyperledger PEER1 <-----------
e2f2c7b262210b781f4bf669283c23325bb4d489559d7464fda3056f10fca330
--------> Starting hyperledger PEER2 <-----------
15dd6e82d4139455feb05ba5e153a014e23de054ae561e3ad29f0433c8dcba0e
--------> Starting hyperledger PEER3 <-----------
7ac45b3e1d11b824bcbcd8eef05dac79ea3232d5245cc415a2729f5c8e2c794c
--------> Printing list of Docker Containers
CONTAINERS: 7ac45b3e1d11 15dd6e82d413 e2f2c7b26221 5a0342d3e19c
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 5a0342d3e19c   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID e2f2c7b26221   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 15dd6e82d413   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 7ac45b3e1d11   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0  PEER1  PEER2
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=10000 B=10000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","10000","b","10000"]},"secureContext":"test_user3"},"id":119}


POST/Chaincode: INVOKEs total (100) divided among all 1 running peers
.........+
RESTART Peers():  PEER0  PEER1
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary
Sleep extra 120 secs

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (8) using peer 3
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (including vp0), deploy, and restarted peers 0 & 1 (but not 2), and more Invokes 
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9889     10111.
ACTUALs:
Peer 0             9890     10110
Peer 1             9890     10110
Peer 3             9890     10110
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (111). Actual CHs: PEER0(111) PEER1(111) PEER3(111) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9789     10211.
ACTUALs:
Peer 0             9790     10210
Peer 1             9790     10210
Peer 3             9790     10210
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (162). Actual CHs: PEER0(161) PEER1(161) PEER3(161) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9789     10211.
ACTUALs:
Peer 0             9790     10210
Peer 1             9790     10210
Peer 3             9790     10210
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (162). Actual CHs: PEER0(161) PEER1(161) PEER3(161) 

FAILED CAT_407_S0S1S2_D_I_R0R1_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [10m39.523251904s]  !!!!!!!!!!!!!!!!!!!!

ERROR: Could not exec docker start 2
[]
-----------
----------- go run CAT_407_S0S1S2_D_I_R0R1_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 06:23:21 UTC 2016 -----------


----------- go run CAT_408_S0S1S2_D_I_R0R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 06:23:21 UTC 2016 -----------
-----------

BEGIN  CAT_408_S0S1S2_D_I_R0R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 06:23:23.051843047 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
179a59ada9c3e1682709756a6a51563bd762a20d7ec5c55e71dddecd2ba27f62
--------> Starting hyperledger PEER0
6a965784d0c22b5781c36199f6b3f4036f3e25532ee98c0ba120ea23d6c96564
--------> Starting hyperledger PEER1 <-----------
b9c4c5e0e0fbb57f5450017847f2f1148fdc79ded5e1ab52e36a11ffe574484a
--------> Starting hyperledger PEER2 <-----------
f8d9084fe03e3c55642e82b0ea237d7edfaa7579e557f72e30a86eec96260c4f
--------> Starting hyperledger PEER3 <-----------
636b1a801536a16943fa53ab5d875e569972977e53af516f9cd49ca551f92656
--------> Printing list of Docker Containers
CONTAINERS: 636b1a801536 f8d9084fe03e b9c4c5e0e0fb 6a965784d0c2
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 6a965784d0c2   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID b9c4c5e0e0fb   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID f8d9084fe03e   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 636b1a801536   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : example02
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
  type  GOLANG
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER0  PEER1  PEER2
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user3"},"id":119}

Sleep extra 120 secs

POST/Chaincode: INVOKEs total (100) divided among all 1 running peers
.........+
RESTART Peers():  PEER0  PEER1  PEER2
After start peer, sleep 5 secs
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary
Sleep extra 120 secs

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (including vp0), deploy, and restarted all peers, and more Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      4885      5115.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2                0         0
Peer 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(62) PEER1(62) PEER2(62) PEER3(54) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after 1000 invokes
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3885      6115.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2                0         0
Peer 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (613). Actual CHs: PEER0(562) PEER1(562) PEER2(562) PEER3(561) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3785      6215.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2                0         0
Peer 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (665). Actual CHs: PEER0(614) PEER1(614) PEER2(614) PEER3(561) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3785      6215.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2                0         0
Peer 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (665). Actual CHs: PEER0(614) PEER1(614) PEER2(614) PEER3(561) 

FAILED CAT_408_S0S1S2_D_I_R0R1R2_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [14m37.496740687s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_408_S0S1S2_D_I_R0R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 06:38:00 UTC 2016 -----------


----------- go run CAT_409_S1S2S3_D_I_R1R2_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 06:38:00 UTC 2016 -----------
-----------

BEGIN  CAT_409_S1S2S3_D_I_R1R2_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 06:38:02.046657092 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
ea39521fa210454a9352aadfe28313572a09108caf95e757baf837fbd3fdb939
--------> Starting hyperledger PEER0
0ce1a0532ebbfb03eb57f1d71debf802fdf1c0f7462ab31fb989855198eccd48
--------> Starting hyperledger PEER1 <-----------
389be3e353bb756607b4ecf26a21f95b41a598e9a8afd269374b90d1e275e779
--------> Starting hyperledger PEER2 <-----------
c8c709e1cb1a0269eede1ad1f9d47b32caa866d4867cdc6fdacf216998746a38
--------> Starting hyperledger PEER3 <-----------
8c9b37e0456c4166ca8e7360cc7fc33810876fe6ee98e6154df572cbbcb8814c
--------> Printing list of Docker Containers
CONTAINERS: 8c9b37e0456c c8c709e1cb1a 389be3e353bb 0ce1a0532ebb
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 0ce1a0532ebb   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 389be3e353bb   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID c8c709e1cb1a   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 8c9b37e0456c   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(54) PEER1(54) PEER2(54) PEER3(54) 

STOP Peers():  PEER1  PEER2  PEER3
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop
Sleep extra 60 secs

POST/Chaincode: DEPLOY chaincode on peer PEER0, A=10000 B=10000
**changeState() Sending Rest Request to url:  http://172.17.0.3:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","10000","b","10000"]},"secureContext":"test_user0"},"id":119}


POST/Chaincode: INVOKEs total (100) divided among all 1 running peers
.........+
RESTART Peers():  PEER1  PEER2
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 30 secs more after a restart
Sleep extra 120 secs

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (4) using peer 2
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (not vp0), deploy, and restarted two of three peers, and more Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for 4c6f56252706eecaa2b5e46b3b31db74ddd3993b90ce7054de9fc6c9b5a5e60fdb1c2df4aad20ca5cc75be7d7fb62cd8eb340d7873fc9ebdf6503cf55cc61362 - LedgerError - ResourceNotFound: ledger: resource not found)
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9893     10107.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER0(58) PEER1(58) PEER2(58) 

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9793     10207.
ACTUALs:
Peer 0             9800     10200
Peer 1             9800     10200
Peer 2             9800     10200
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER0(159) PEER1(159) PEER2(159) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      9793     10207.
ACTUALs:
Peer 0             9800     10200
Peer 1             9800     10200
Peer 2             9800     10200
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (160). Actual CHs: PEER0(159) PEER1(159) PEER2(159) 

FAILED CAT_409_S1S2S3_D_I_R1R2_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=true) [10m47.010689274s]  !!!!!!!!!!!!!!!!!!!!

ERROR: Could not exec docker start 3
[]
-----------
----------- go run CAT_409_S1S2S3_D_I_R1R2_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 06:48:49 UTC 2016 -----------


----------- go run CAT_410_S1S2S3_D_I_R1R2R3_IQ.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 06:48:49 UTC 2016 -----------
-----------

BEGIN  CAT_410_S1S2S3_D_I_R1R2R3_IQ.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 06:48:50.495156199 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
206e29a54502ca567bcca368bd800c0322f1cc2e8b708f0785882b15d46de65f
--------> Starting hyperledger PEER0
56391cffb9ed15450a79ba0c5e47c37e3436127bf5d0b06e4141da4530dd3166
--------> Starting hyperledger PEER1 <-----------
2f0ec6471d874031dc6b7c1e0f8aa26235c9bdbc8ff3eb0cf9c8be40e77e264a
--------> Starting hyperledger PEER2 <-----------
4dc422188816bb447a521345c0a2ea4d831d47f7bc551a68fa32e21ef51b9511
--------> Starting hyperledger PEER3 <-----------
1fddbf9503c6f127add294d911b01978c740cdf57736e178f66d4e45779d3b66
--------> Printing list of Docker Containers
CONTAINERS: 1fddbf9503c6 4dc422188816 2f0ec6471d87 56391cffb9ed
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 56391cffb9ed   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID 2f0ec6471d87   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 4dc422188816   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID 1fddbf9503c6   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 

POST/Chaincode: INVOKEs total (96) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 0, after initial Deploy PLUS 96 more invokes
PASSED QUERY TEST: Expected A/B (999900/1000100) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999900/1000100 1:999900/1000100 2:999900/1000100 3:999900/1000100 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (54). Actual CHs: PEER0(55) PEER1(55) PEER2(55) PEER3(55) 

STOP Peers():  PEER1  PEER2  PEER3
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: DEPLOY chaincode on peer PEER0, A=5000 B=5000
**changeState() Sending Rest Request to url:  http://172.17.0.3:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","5000","b","5000"]},"secureContext":"test_user0"},"id":119}

Sleep extra 120 secs

POST/Chaincode: INVOKEs total (100) divided among all 1 running peers
.........+
RESTART Peers():  PEER1  PEER2  PEER3
After start peer, sleep 5 secs
After start peer, sleep 5 secs
After start peer, sleep 5 secs
Sleep 30 secs more after a restart
Sleep extra 120 secs

POST/Chaincode: INVOKEs (1) using peer 0

POST/Chaincode: INVOKEs (2) using peer 1

POST/Chaincode: INVOKEs (4) using peer 2

POST/Chaincode: INVOKEs (8) using peer 3
Sleep extra 120 secs

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, after stopped 3 peers (not vp0), deploy, and restarted all peers, and more Invokes 
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      4885      5115.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2                0         0
Peer 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (113). Actual CHs: PEER0(56) PEER1(63) PEER2(63) PEER3(63) 

POST/Chaincode: INVOKEs total (1000) divided among all 4 running peers
.........+.........+..............+.........+..............+.........+..............+.........+.....
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP FINAL, after 1000 invokes
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error: state may be inconsistent, cannot query
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3885      6115.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2                0         0
Peer 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (613). Actual CHs: PEER0(511) PEER1(563) PEER2(563) PEER3(563) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to CATCH UP AND CONFIRM RESULTS after extra invokes and sleep
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3785      6215.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2                0         0
Peer 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (665). Actual CHs: PEER0(571) PEER1(615) PEER2(615) PEER3(615) 
WaitAndConfirm: Tests still not passing. Sleep extra (32 secs) and check again...

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP to WAIT EXTRA TIME and CHECK AGAIN to see if all nodes catch up.
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
POST /chaincode returned code =-32003 message=Query failure data=Error when querying chaincode: Error:Failed to launch chaincode spec(Could not get deployment transaction for e0d5efeafa6b6e244a99a3bd4efed36099f5593af76d99c324af3dcf2d26549494fb75c161489e9908d52f23b09c8f734d741bb2cb94ee876114665bdd94cf13 - LedgerError - ResourceNotFound: ledger: resource not found)
FAILED QUERY TEST: the required peers do NOT match!!!!!!!!!!
EXPECTED A/B:      3785      6215.
ACTUALs:
Peer 0                0         0
Peer 1                0         0
Peer 2                0         0
Peer 3                0         0
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (665). Actual CHs: PEER0(571) PEER1(615) PEER2(615) PEER3(615) 

FAILED CAT_410_S1S2S3_D_I_R1R2R3_IQ.go (Q_Pass=false CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [13m49.023874169s]  !!!!!!!!!!!!!!!!!!!!

-----------
----------- go run CAT_410_S1S2S3_D_I_R1R2R3_IQ.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 07:02:39 UTC 2016 -----------


----------- go run CAT_ip_debug.go STARTSTARTSTARTSTARTSTARTSTART Thu Sep 29 07:02:39 UTC 2016 -----------
-----------

BEGIN  CAT_ip_debug.go (Enforce Q=true CH=true, MustMatch Q=true CH=false AllRunningNodes=true) [STARTED: 2016-09-29 07:02:41.20464935 +0000 UTC]
Creating a local docker network with # peers =  4
exec.Command:  /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/automation/local_fabric_gerrit.sh -c gerritv0.6 -n 4 -f 1 -l error -m pbft -b 2 -s
exec.Command is prepared to run
--------> Setting default command line Arg values to without security & consensus and starts 5 peers
Number of PEERS are 4
Is Security and Privacy enabled Y
--------> Pulling Base Docker Images from Docker Hub
v0.6: Pulling from rameshthoomu/baseimage
Digest: sha256:fca28980040eec9aa04e44c2a67d4264049839f99c94599045b6c48f2c2b8db1
Status: Image is up to date for rameshthoomu/baseimage:v0.6
gerritv0.6: Pulling from rameshthoomu/peer
Digest: sha256:b9027741466b1d3f637ae048f423f181c5978dc4c58a8b71119a2e3527f5aff6
Status: Image is up to date for rameshthoomu/peer:gerritv0.6
gerritv0.6: Pulling from rameshthoomu/membersrvc
Digest: sha256:87352f56cef6fd672bb8f9f68973a13ee9dffeb5b75e8be930eae18a7e126e0c
Status: Image is up to date for rameshthoomu/membersrvc:gerritv0.6
--------> Fetching IP address
Docker0 interface IP Address 172.17.0.1
--------> Fetching PORT number
PORT NUMBER IS 2375
--------> Calling membersrvc_setup function
--------> Starting membersrvc Server
398d4a42687c6c4f446c8ceb55167d044c4a25d460799131e76bbaa8c01d821f
--------> Starting hyperledger PEER0
55990f1ad9745d3b82b026208784753d1b60ca287ea627556aaf83d77d5c3049
--------> Starting hyperledger PEER1 <-----------
da0ea2605fabb743e2dd939da44dff4c3939fd922567d54b6a4f7a158884be5b
--------> Starting hyperledger PEER2 <-----------
61b0dc8f62c97d3b39eba476bbde1c6bbb2c539f203a3c1b79aa3e945008905a
--------> Starting hyperledger PEER3 <-----------
bb28423b2c786d5cd4563380b2b52033922e9b52d5eb3d6d0be8bd0165345f42
--------> Printing list of Docker Containers
CONTAINERS: bb28423b2c78 61b0dc8f62c9 da0ea2605fab 55990f1ad974
NUM_CONTAINERS: 4
creating file ../automation/networkcredentials
 
PeerData : 
----------> Printing Container ID's with IP Address and PORT numbers
Container ID 55990f1ad974   Peer Name: PEER0
 REST_EndPoint : 172.17.0.3:7050
 GRPC_EndPoint : 172.17.0.3:30001
 
Container ID da0ea2605fab   Peer Name: PEER1
 REST_EndPoint : 172.17.0.4:7060
 GRPC_EndPoint : 172.17.0.4:30003
 
Container ID 61b0dc8f62c9   Peer Name: PEER2
 REST_EndPoint : 172.17.0.5:7070
 GRPC_EndPoint : 172.17.0.5:30005
 
Container ID bb28423b2c78   Peer Name: PEER3
 REST_EndPoint : 172.17.0.6:7080
 GRPC_EndPoint : 172.17.0.6:30007
 
 
Client Credentials : 
 
username: test_user0  secretkey : MS9qrN8hFjlE
username: test_user1  secretkey : jGlNl6ImkuDo
username: test_user2  secretkey : zMflqOKezFiA
username: test_user3  secretkey : vWdLCE00vJy0
 
exec.Command is done
peerNetworkSetup GetNC_Local() Copied contents from ../automation/networkcredentials to ../util/NetworkCredentials.json
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4

ThisNetwork.IsLocal : true
  ip: 172.17.0.3 port: 7050 name: PEER0 
  users:
    user: test_user0 , secret: MS9qrN8hFjlE
  ip: 172.17.0.4 port: 7050 name: PEER1 
  users:
    user: test_user1 , secret: jGlNl6ImkuDo
  ip: 172.17.0.5 port: 7050 name: PEER2 
  users:
    user: test_user2 , secret: zMflqOKezFiA
  ip: 172.17.0.6 port: 7050 name: PEER3 
  users:
    user: test_user3 , secret: vWdLCE00vJy0

Available Chaincodes :
Chaincode : example02
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
Chaincode : example05
Detail :
  path  github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05
  type  GOLANG
Chaincode : artfun
Detail :
  type  GOLANG
  path  github.com/hyperledger/fabric/examples/chaincode/go/artfun
Chaincode : concurrency
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Chaincode : mycc
Detail :
  type  GOLANG
  path  https://github.com/scottz64/obcsdk/ledgerstresstest/example02_addRecordsToLedger
Reading NetworkCredentials.json to get Network Name, PeerData, UserData
PWD : /opt/gopath/src/github.com/hyperledger/fabric/vendor/obcsdk/CAT
Network Name, #Peers, #Users:  localpeer_ramesh 4 4
**register() Sending Rest Request to url http://172.17.0.3:7050/registrar user=test_user0 secret=MS9qrN8hFjlE
{"OK":"Login successful for user 'test_user0'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER0 

**register() Sending Rest Request to url http://172.17.0.4:7050/registrar user=test_user1 secret=jGlNl6ImkuDo
{"OK":"Login successful for user 'test_user1'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER1 

**register() Sending Rest Request to url http://172.17.0.5:7050/registrar user=test_user2 secret=zMflqOKezFiA
{"OK":"Login successful for user 'test_user2'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER2 

**register() Sending Rest Request to url http://172.17.0.6:7050/registrar user=test_user3 secret=vWdLCE00vJy0
{"OK":"Login successful for user 'test_user3'."}

RegisterUsers(): Done Registering  1 / 1  users on  PEER3 

NetworkPeers() GetChainInfo status:  200 OK
ChainStats() chain info status:  200 OK
ChainStats() chain info body:  {"height":1,"currentBlockHash":"RrndKwuojRMjOz/rdD7rJD/NUupiuBuCtQwnZG7Vdi/XXcTd2MDyAMsFAZ1ntZL2/IIcSUeatIZAKS6ss7fEvg=="}


POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":2}


POST/Chaincode: INVOKEs (1) being sent to each running peer

POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP SETUP, after initial Deployment followed by 1 Invoke on each peer
PASSED QUERY TEST: Expected A/B (999996/1000004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999996/1000004 1:999996/1000004 2:999996/1000004 3:999996/1000004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (6). Actual CHs: PEER0(6) PEER1(6) PEER2(6) PEER3(6) 
--------------- displayPeerIp: docker inspect IP Address of peer PEER0 = 172.17.0.3
--------------- displayPeerIp: docker inspect IP Address of peer PEER1 = 172.17.0.4
--------------- displayPeerIp: docker inspect IP Address of peer PEER2 = 172.17.0.5
--------------- displayPeerIp: docker inspect IP Address of peer PEER3 = 172.17.0.6

STOP Peers():  PEER0
After stop peer, sleep 5 secs
Sleep 10 secs more after stop, + extra 20 secs because stopping primary

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/1 after STOP PEER 0 and Invokes
PASSED QUERY TEST: Expected A/B (999896/1000104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 1:999896/1000104 2:999896/1000104 3:999896/1000104 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (57). Actual CHs: PEER1(56) PEER2(56) PEER3(56) 

RESTART Peers():  PEER0
After start peer, sleep 5 secs
Sleep 60 secs more after a restart = 30 plus extra 30 secs because restarting potential primary
--------------- displayPeerIp: docker inspect IP Address of peer PEER0 = 172.17.0.3

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/1 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999867/1000133 1:999796/1000204 2:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (109). Actual CHs: PEER0(71) PEER1(108) PEER2(108) PEER3(108) 

POST/Chaincode: NEW DEPLOY, on peer PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":229}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/1 after REDEPLOY same init values
PASSED QUERY TEST: Expected A/B (999796/1000204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999867/1000133 1:999796/1000204 2:999796/1000204 3:999796/1000204 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (110). Actual CHs: PEER0(71) PEER1(109) PEER2(109) PEER3(109) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/1 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (999696/1000304) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999753/1000247 1:999696/1000304 2:999696/1000304 3:999696/1000304 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (162). Actual CHs: PEER0(131) PEER1(161) PEER2(161) PEER3(161) 

STOP Peers():  PEER1
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/1 after STOP PEER 1 and Invokes
PASSED QUERY TEST: Expected A/B (999596/1000404) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999596/1000404 2:999596/1000404 3:999596/1000404 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (213). Actual CHs: PEER0(211) PEER2(211) PEER3(211) 

RESTART Peers():  PEER1
After start peer, sleep 5 secs
Sleep 30 secs more after a restart
--------------- displayPeerIp: docker inspect IP Address of peer PEER1 = 172.17.0.4

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/1 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999496/1000504) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999496/1000504 1:999559/1000441 2:999496/1000504 3:999496/1000504 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (265). Actual CHs: PEER0(263) PEER1(230) PEER2(263) PEER3(263) 

POST/Chaincode: NEW DEPLOY, on peer PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":560}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/1 after REDEPLOY same init values
PASSED QUERY TEST: Expected A/B (999496/1000504) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999496/1000504 1:999559/1000441 2:999496/1000504 3:999496/1000504 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (266). Actual CHs: PEER0(264) PEER1(230) PEER2(264) PEER3(264) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/1 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (999396/1000604) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999396/1000604 1:999446/1000554 2:999396/1000604 3:999396/1000604 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (318). Actual CHs: PEER0(316) PEER1(290) PEER2(316) PEER3(316) 

STOP Peers():  PEER2
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/1 after STOP PEER 2 and Invokes
PASSED QUERY TEST: Expected A/B (999296/1000704) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999296/1000704 1:999296/1000704 3:999296/1000704 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (369). Actual CHs: PEER0(366) PEER1(366) PEER3(366) 

RESTART Peers():  PEER2
After start peer, sleep 5 secs
Sleep 30 secs more after a restart
--------------- displayPeerIp: docker inspect IP Address of peer PEER2 = 172.17.0.5

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/1 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (999196/1000804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999196/1000804 1:999196/1000804 2:999272/1000728 3:999196/1000804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (421). Actual CHs: PEER0(418) PEER1(418) PEER2(378) PEER3(418) 

POST/Chaincode: NEW DEPLOY, on peer PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":891}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/1 after REDEPLOY same init values
PASSED QUERY TEST: Expected A/B (999196/1000804) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999196/1000804 1:999196/1000804 2:999272/1000728 3:999196/1000804 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (422). Actual CHs: PEER0(419) PEER1(419) PEER2(378) PEER3(419) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/1 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (999096/1000904) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:999096/1000904 1:999096/1000904 2:999159/1000841 3:999096/1000904 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (474). Actual CHs: PEER0(471) PEER1(471) PEER2(438) PEER3(471) 

STOP Peers():  PEER3
After stop peer, sleep 5 secs
Sleep 10 secs more after stop

POST/Chaincode: INVOKEs total (100) divided among all 3 running peers
.........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 3, cycle 1/1 after STOP PEER 3 and Invokes
PASSED QUERY TEST: Expected A/B (998996/1001004) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998996/1001004 1:998996/1001004 2:998996/1001004 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (525). Actual CHs: PEER0(521) PEER1(521) PEER2(521) 

RESTART Peers():  PEER3
After start peer, sleep 5 secs
Sleep 30 secs more after a restart
--------------- displayPeerIp: docker inspect IP Address of peer PEER3 = 172.17.0.6

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 6, cycle 1/1 after RESTART and Invokes 
PASSED QUERY TEST: Expected A/B (998896/1001104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998896/1001104 1:998896/1001104 2:998896/1001104 3:998963/1001037 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (577). Actual CHs: PEER0(573) PEER1(573) PEER2(573) PEER3(538) 

POST/Chaincode: NEW DEPLOY, on peer PEER3, using SAME INIT VALUES (and therefore no new chaincode instance, so this will be ignored), A=1000000 B=1000000

POST/Chaincode: DEPLOY chaincode on peer PEER3, A=1000000 B=1000000
**changeState() Sending Rest Request to url:  http://172.17.0.6:7050/chaincode/
                Sending Rest Request Payload: {"jsonrpc":"2.0","method":"deploy","params":{"type":1,"chaincodeID":{"path":"github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"},"ctorMsg":{"function":"init","args":["a","1000000","b","1000000"]},"secureContext":"test_user3"},"id":1222}


POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 8, cycle 1/1 after REDEPLOY same init values
PASSED QUERY TEST: Expected A/B (998896/1001104) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998896/1001104 1:998896/1001104 2:998896/1001104 3:998963/1001037 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (578). Actual CHs: PEER0(574) PEER1(574) PEER2(574) PEER3(538) 

POST/Chaincode: INVOKEs total (100) divided among all 4 running peers
........
POST/Chaincode: QUERY all running peers for a and b, and chainheight
STEP 10, cycle 1/1 after Invoke on each peer
PASSED QUERY TEST: Expected A/B (998796/1001204) MATCHED on enough/appropriate Peers. ACTUALs (node:A/B): 0:998796/1001204 1:998796/1001204 2:998796/1001204 3:998849/1001151 
PASSED CHAIN HEIGHT TEST: matches on enough/appropriate Peers. Expected CH (630). Actual CHs: PEER0(626) PEER1(626) PEER2(626) PEER3(598) 
CatchUpAndConfirm: All enforced test types already passed. Hooray!

PASSED CAT_ip_debug.go (Q_Pass=true CH_Pass=true, Enforce Q=true CH=true, MustMatch Q=true CH=false AllVP=false) [21m10.280749503s]  

-----------
----------- go run CAT_ip_debug.go FINISHFINISHFINISHFINISHFINISH Thu Sep 29 07:23:51 UTC 2016 -----------

=========== GROUP END, using GERRIT COMMIT IMAGE gerritv0.6
=========== STARTTIME Wed Sep 28 23:23:20 UTC 2016
=========== STOP TIME Thu Sep 29 07:23:51 UTC 2016, TESTS STARTED=46 PASS=39 FAIL=7 STOPPED=0
